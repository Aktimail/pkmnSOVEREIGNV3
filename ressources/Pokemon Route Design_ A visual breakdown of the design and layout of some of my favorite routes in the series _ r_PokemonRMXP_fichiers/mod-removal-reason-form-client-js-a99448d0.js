import{O as e,K as t,_ as s,g as a,n as i,t as o,e as n,l,L as r,s as d,u as m,N as c,E as u,G as p,ah as h,c as v,T as b,hb as f,a as g,P as y,V as R,I}from"./shell-a9dcd804.js";import{x as E,a as S,g as x,f as C,s as w,c as k,I as M,G as N,aR as A,A as j}from"./icon-d7ad820f.js";import{an as L,a8 as V}from"./age-gate-standalone-client-js-55e13342.js";import{B as $,C as B,D as T}from"./modActions-183d7a2f.js";import{F}from"./faceplate-form-f63ed129.js";import{c as _,r as D}from"./filterNullish-9ec33a16.js";import{C as q}from"./comment-4f28f421.js";import{P}from"./overflow-menu-actions-ec094350.js";import{i as U}from"./links-30dbf643.js";import"./faceplate-select-text-input-8c128e32.js";import"./faceplate-option-4ed33696.js";import{F as O}from"./constants-775ffd1d.js";import{R as z}from"./header-action-item-chat-client-js-949dafe8.js";import"./chat-mobile-xpromo-client-js-342f9966.js";import"./faceplate-progress-433a18f1.js";import"./faceplate-textarea-input-9ac7fafc.js";import{R as G}from"./smart-escalations-provider-client-js-7cc1a06d.js";import"./distinguished-tags-4752ad65.js";import"./community-picker-75beb711.js";import"./select-controller-b7a961d7.js";import"./user-flair-aefa9eac.js";import"./validate-image-9f48337a.js";import"./text-input-1e857ee0.js";import"./tooltip.base-a366add3.js";import"./rpl-popper-cdaac5d5.js";import"./community-onboarding-completed-modal-client-js-e3c10ae1.js";import"./hui-user-drawer-client-js-9e94c0bf.js";import"./TinyGesture-89d9957c.js";let H=t;const Z="dont-notify-tooltip-close",K="removal-reason-input-changed";class J extends O{constructor(){super(...arguments),this.isInputDirty=!1,this.required=!1,this.handleSubmit=()=>{this.isInputDirty=!0},this.handleInvalid=e=>{e.preventDefault()}}get value(){const e=this._internals.getFormValue();return e?e.toString():null}set value(e){e!==this.value&&(this._internals.setFormValue(e),this.updateValidity(),this.dispatchEvent(new CustomEvent(K,{detail:{value:e},bubbles:!0})))}connectedCallback(){super.connectedCallback(),_(this).then((e=>{e?.addEventListener("faceplate-submit",this.handleSubmit)})),this.addEventListener("invalid",this.handleInvalid),this.updateValidity()}disconnectedCallback(){super.disconnectedCallback(),this.form?.removeEventListener("faceplate-submit",this.handleSubmit),this.removeEventListener("invalid",this.handleInvalid)}updateValidity(){this.required&&!this.value?this._internals.setValidity({valueMissing:!0},this.getValueMissingValidationMessage()):this._internals.setValidity(),this.requestUpdate()}getValueMissingValidationMessage(){return""}renderValidationState(){return this.isInputDirty&&this.validationMessage?E`<span class="text-12 text-danger-content px-md">${this.validationMessage}</span>`:null}}s([a()],J.prototype,"isInputDirty",void 0),s([i({type:Boolean})],J.prototype,"required",void 0);class Q extends CustomEvent{constructor(e){super(Q.eventName,{detail:e,bubbles:!0,composed:!0})}}Q.eventName="select-removal-reason";let Y=class extends J{constructor(){super(...arguments),this.isSitewide=!1,this.handleSelect=e=>{const t=e.target,s=(this.includePlatformRuleOption?[...this.reasons||[],this.getPlatformRuleOption()]:this.reasons||[]).find((e=>e.id===t.value));s&&(this.value=s.id,this.dispatchEvent(new Q({...s,isSitewide:this.isSitewide})))}}get displayText(){return this.reasons?.find((e=>e.id===this.value))?.title||""}static get styles(){return[o,S`:host{display:flex;flex-direction:column}`]}getValueMissingValidationMessage(){return"L’ajout d’un motif de retrait est obligatoire."}getPlatformRuleOption(){return{id:"default-removal-reason",title:"Enfreindre les règles de la plateforme",message:""}}getDropdownPlaceholder(){return this.isSitewide?"Sélectionne une règle de la plateforme":"Sélectionner un motif de retrait"}render(){return E` <label class="text-16 text-neutral-content-strong"> ${super.render()} </label> <faceplate-select-text-input label="${this.getDropdownPlaceholder()}" value="${this.value}" readonly="readonly" style="--faceplate-select-menu-max-height:350px;-faceplate-select-menu-max-width:80vw" @faceplate-select-text-input:change="${this.handleSelect}"> ${this.reasons?.map(((e,t)=>E`<faceplate-option value="${e.id}" display-text="${e.title}"><span slot="leading" class="whitespace-nowrap text-16">${t+1}</span></faceplate-option>`))} ${this.includePlatformRuleOption&&E`<faceplate-option value="default-removal-reason" display-text="${this.getPlatformRuleOption().title}"></faceplate-option>`} ${this.includeAddRemovalReasonOption&&E`<faceplate-option value="add-removal-reason"> <slot name="link"></slot> </faceplate-option>`} </faceplate-select-text-input> ${this.renderValidationState()} `}};s([i({type:Array})],Y.prototype,"reasons",void 0),s([i({type:Boolean,attribute:"is-sitewide"})],Y.prototype,"isSitewide",void 0),s([i({type:Boolean,attribute:"include-platform-rule-option"})],Y.prototype,"includePlatformRuleOption",void 0),s([i({type:Boolean,attribute:"include-add-removal-reason-option"})],Y.prototype,"includeAddRemovalReasonOption",void 0),Y=s([n("removal-reason-input")],Y);const{svg:W}=x();var X=C(W`<path d="m16.784 9.5 2.558 2.558-.884.884-2.558-2.558-2.558 2.558-.884-.884L15.016 9.5l-2.558-2.558.884-.884L15.9 8.616l2.558-2.558.884.884L16.784 9.5Zm-6.427 10.248A1.128 1.128 0 0 0 11 18.715V1.286a1.131 1.131 0 0 0-.643-1.034A1.091 1.091 0 0 0 9.19.405L3.815 5.056H2.108A1.124 1.124 0 0 0 1 6.194v7.613a1.124 1.124 0 0 0 1.108 1.138h1.707L9.2 19.608a1.084 1.084 0 0 0 1.157.14ZM2.25 6.306h2.031l5.47-4.733v16.855L4.28 13.7h-2.03V6.306Z"></path>`,"0 0 20 20","mute-outline");let ee=class extends z{constructor(){super(),this.tooltipVisible=!1,this.trigger="manual",this.placement="top",this.appearance="neutral"}connectedCallback(){super.connectedCallback(),this.initializeTooltip(),this.addEventListener(Z,this.hideTooltip)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(Z,this.hideTooltip)}async initializeTooltip(){l.getItem(r.RemovalReasonDontNotifyDismissed)||setTimeout((()=>this.showTooltip()),750)}showTooltip(){this.show()}hideTooltip(e){e.stopPropagation(),l.setItem(r.RemovalReasonDontNotifyDismissed,"true"),this.hide()}};s([a()],ee.prototype,"tooltipVisible",void 0),ee=s([n("dont-notify-tooltip")],ee);let te=class extends w{constructor(){super(...arguments),this.isAIModEnabledForSubreddit=!1}handleClose(){this.dispatchEvent(new CustomEvent(Z,{bubbles:!0}))}render(){return E` <div class="pointer-events-auto py-xs pl-xs w-[200px]"> <div class="flex flex-row"> <div> <div class="text-14 font-bold text-neutral-content-strong"> Tu ne veux pas envoyer de notifications\u00A0? </div> <div class="text-12 font-normal text-neutral-content-strong"> ${this.isAIModEnabledForSubreddit?"Utilise les motifs de retrait pour entraîner les automatisations et suivre les actions de modération sans envoyer de notifications aux membres.":"Utilise les motifs de retrait pour suivre les actions de modération sans envoyer de notifications aux membres."} </div> </div> ${d({appearance:"secondary",leadingIcon:k({size:M.Small}),size:m.Small,screenReaderContent:"Fermer l’infobulle",attributes:{type:"button",className:"flex-shrink-0 -mt-xs",onclick:this.handleClose}})} </div> <div class="flex justify-end mt-md"> ${d({appearance:"plain",size:m.Small,children:"Ok",attributes:{type:"button",onclick:this.handleClose}})} </div> </div> `}};var se;te.styles=[o],s([i({type:Boolean,attribute:"is-ai-mod-enabled-for-subreddit"})],te.prototype,"isAIModEnabledForSubreddit",void 0),te=s([n("dont-notify-tooltip-content")],te),function(e){e.Comment="Comment",e.Modmail="Modmail",e.DontNotify="DontNotify"}(se||(se={}));let ae=class extends J{constructor(){super(...arguments),this.isModmailAllowed=!1,this.isAIModEnabledForSubreddit=!1}static get styles(){return[o,S`:host{display:flex;flex-direction:column;gap:var(--spacer-xs)}`]}connectedCallback(){super.connectedCallback(),this.value=se.Comment}getValueMissingValidationMessage(){return"Merci de sélectionner la méthode de notification."}render(){return E` <label class="text-16 text-neutral-content-strong"> ${this._internals.input} Informer le membre via </label> <div class="flex flex-row gap-xs"> ${d({appearance:"bordered",children:"Commentaire",leadingIcon:N({size:M.Small}),selected:this.value===se.Comment,attributes:{type:"button",onclick:()=>{this.value=se.Comment,this.requestUpdate()}}})} ${this.isModmailAllowed?d({appearance:"bordered",children:"Mod mail",leadingIcon:A({size:M.Small}),selected:this.value===se.Modmail,attributes:{type:"button",onclick:()=>{this.value=se.Modmail,this.requestUpdate()}}}):j} <dont-notify-tooltip> ${d({appearance:"bordered",children:"Ne pas informer",leadingIcon:X({size:M.Small}),selected:this.value===se.DontNotify,attributes:{type:"button",onclick:()=>{this.value=se.DontNotify,this.requestUpdate()}}})} <dont-notify-tooltip-content ?is-ai-mod-enabled-for-subreddit="${this.isAIModEnabledForSubreddit}" slot="content"></dont-notify-tooltip-content> </dont-notify-tooltip> </div> ${this.renderValidationState()} `}};var ie;s([i({type:Boolean,attribute:"is-mod-mail-allowed"})],ae.prototype,"isModmailAllowed",void 0),s([i({type:Boolean,attribute:"is-ai-mod-enabled-for-subreddit"})],ae.prototype,"isAIModEnabledForSubreddit",void 0),ae=s([n("removal-reason-notification-method")],ae),function(e){e.User="User",e.Mod="Mod"}(ie||(ie={}));let oe=class extends J{static get styles(){return[o,S`:host{display:flex;flex-direction:column;gap:var(--spacer-xs)}`]}connectedCallback(){super.connectedCallback(),this.value=ie.Mod}getValueMissingValidationMessage(){return"Merci de sélectionner l’expéditeur·rice de la notification."}render(){return E` <label class="text-16 text-neutral-content-strong"> ${this._internals.input} Envoyer le message en tant que </label> <div class="flex flex-row gap-xs"> ${d({appearance:"bordered",children:"Équipe de modération",leadingIcon:E`<slot name="mod-icon"></slot>`,selected:this.value===ie.Mod&&!this.disabled,attributes:{type:"button",disabled:this.disabled,onclick:()=>{this.value=ie.Mod,this.requestUpdate()}}})} ${d({appearance:"bordered",children:this.user,leadingIcon:E`<slot name="user-icon"></slot>`,selected:this.value===ie.User&&!this.disabled,attributes:{type:"button",disabled:this.disabled,onclick:()=>{this.value=ie.User,this.requestUpdate()}}})} </div> ${this.renderValidationState()} `}};s([i()],oe.prototype,"user",void 0),oe=s([n("removal-reason-notification-sender")],oe);class ne extends CustomEvent{constructor(e){super(ne.eventName,{bubbles:!0,composed:!0,cancelable:!0,detail:e})}}ne.eventName="mod-removal-reason-added";class le extends CustomEvent{constructor(e){super(le.eventName,{bubbles:!0,composed:!0,cancelable:!0,detail:e})}}le.eventName="removal-reason-form-element-clicked";let re=class extends(c(F)){constructor(){super(),this._eventController=new u(this),this.handleFormElementClicked=e=>{e.target?.name&&this.dispatchEvent(new le({formElement:e.target.name}))},this.handleRemovalReasonInputChanged=e=>{if(e.target instanceof ae){const t=e.target.value!==se.DontNotify;this.toggleNotificationSender(t),this.toggleMessageInput(t)}e.target instanceof Y&&"removal-reason"===e.target.name&&this.toggleDefaultPolicyInput("default-removal-reason"===e.target.value)},this.convertFormDataToGql=e=>{const t=e.get("notification-method"),s=e.get("notification-sender"),a={reasonId:this.getRemovalReasonId(e),type:this.parseRemovalReasonMessageType(t,s),message:t===se.DontNotify?null:e.get("message"),isLockComment:e.has("lock")},i=e.get("modNote")||void 0,o={itemId:e.get("thing")?.toString()||"",removalReason:a,modNote:i};return this.lastSubmittedData=o,JSON.stringify({...o,csrf_token:e.get("csrf_token")})},this.encoders={...this.encoders,"application/json":this.convertFormDataToGql}}connectedCallback(){super.connectedCallback(),this._eventController.define(K,this.handleRemovalReasonInputChanged),this._eventController.define("click",this.handleFormElementClicked)}toggleNotificationSender(e){const t=this.elements["notification-sender"];t&&(e?t.removeAttribute("disabled"):t.setAttribute("disabled",""))}toggleField(e,t){e&&(t?(e.classList.remove("hidden"),e.setAttribute("required","")):(e.classList.add("hidden"),e.removeAttribute("required")))}toggleMessageInput(e){const t=this.elements.message;t&&this.toggleField(t,e)}toggleDefaultPolicyInput(e){const t=this.elements["default-removal-reason"];t&&this.toggleField(t,e)}showError(){const e={level:p.error,message:"Une erreur est survenue",cause:h.QueryBadResponse};this.dispatchEvent(v("faceplate-alert",e))}async handleResponse(e){if(!e.ok)return this.dispatchEvent(v(ce.eventName)),this.showError();try{const t=await e.text(),s={level:p.success,message:"Motif de retrait ajouté"},a=this.lastSubmittedData?.itemId||"";if(U(a)){const e={postId:a,action:P.addRemovalReason,value:!0};this.publish(b.PostUpdated,e)}else{const e={commentId:a,action:q.addRemovalReason,value:!0};this.publish(b.CommentUpdated,e)}if(t){const e={parentThingId:a,body:t};this.publish(b.CommentCreated,e)}this.dispatchEvent(v(ce.eventName)),this.dispatchEvent(v("faceplate-alert",s)),this.lastSubmittedData&&this.dispatchEvent(new ne(this.lastSubmittedData))}catch{this.showError()}}parseRemovalReasonMessageType(e,t){return e===se.Comment?t===ie.Mod?f.CommentAsSubreddit:f.CommentAsMod:e===se.Modmail?t===ie.Mod?f.MessageAsSubreddit:f.MessageAsMod:null}getRemovalReasonId(e){const t=e.get("removal-reason");return"default-removal-reason"===t?e.get("default-removal-reason"):t}};re=s([n("removal-reason-form")],re),D(re);const de={"removal-reason":"subreddit_removal_reason","default-removal-reason":"default_removal_reason",message:"message_to_user","notification-method":"notification_method","notification-sender":"notification_sender",modNote:"mod_note"};class me extends CustomEvent{constructor(e){super(me.eventName,{detail:e,bubbles:!0,composed:!0})}}me.eventName="mod-add-removal-reason-show-modal";class ce extends CustomEvent{constructor(){super(ce.eventName)}}ce.eventName="mod-add-removal-reason-toggle-loading";let ue=class extends(g(w)){constructor(){super(...arguments),this.pubsub=new y(this),this.getInputValue=e=>this.removalReasonForm?.querySelector(`input[name="${e}"]`)?.value,this.buildAndTrackEvent=e=>{const t={action:"click",...e,authorId:this.getInputValue("authorId"),subredditId:this.getInputValue("subredditId"),subredditName:this.subredditName,thingId:this.thingId};this.trackEvent($(t))},this.firstUpdated=()=>{this.isSmartEscalationsCommunityRulesEnabled&&this.updateComplete.then((()=>{this.primaryButton?.addEventListener("click",(()=>{this.removalReasonForm?.isValid&&(this.toggleButtonLoadingIndicator(),this.initSmartEscalations())}))}))},this.handleAddRemovalReasonEvent=({detail:e})=>{""!==e?this.show(e):this.thingId=void 0},this.handleFormElementClicked=e=>{const t={type:de[e.detail.formElement]||e.detail.formElement},s=this.removalReasonForm?.elements[e.detail.formElement]?.value||this.getInputValue(e.detail.formElement);if("lock"===e.detail.formElement&&(t.isLocked="on"===s),"notification-method"===e.detail.formElement){if(!s)return;t.notificationMethod=s}if("notification-sender"===e.detail.formElement){if(!s)return;t.sendAs=s}this.buildAndTrackEvent(t)},this.handleSelectRemovalReason=async e=>{this.buildAndTrackEvent({type:e.detail.isSitewide?"default_removal_reason":"subreddit_removal_reason",reason:e.detail.id});const t=this.removalReasonForm,s=this.shadowRoot?.querySelector("faceplate-textarea-input");s&&e.detail.message&&(s.value=await this.renderRemovalReasonMessage(e.detail.id,e.detail.message),await s.updateComplete,s.syncInputValidity(),t?.notifyObservers(s))},this.renderRemovalReasonMessage=async(e,t)=>{try{return await this.renderRemovalReasonAsSavedResponseTemplate(e)}catch{return t}},this.renderRemovalReasonAsSavedResponseTemplate=t=>async function({responseId:t,subredditName:s,contentId:a}){const{data:i,errors:o}=await H({operation:e.RenderSavedResponseTemplate,variables:{responseId:t,subredditName:s,variables:{removalVariables:{contentId:a}}}});if(o?.length||"Subreddit"!==i.subredditInfoByName?.__typename||!i.subredditInfoByName?.moderation?.renderSavedResponseTemplate?.templateValidation?.ok)throw new Error(L());return i.subredditInfoByName.moderation.renderSavedResponseTemplate.response.markdown}({responseId:t,subredditName:this.subredditName,contentId:this.thingId}),this.handleAddedRemovalReason=e=>{const t=function(e){let t;t=e.type===f.CommentAsMod||e.type===f.CommentAsSubreddit?"comment":e.type===f.MessageAsMod||e.type===f.MessageAsSubreddit?"modmail":"no message";const s=e.type===f.CommentAsSubreddit||e.type===f.MessageAsSubreddit?"subreddit":"self";return{is_locked:e.isLockComment,notify:t,send_as:s}}(e.detail.removalReason);this.trackEvent(B(t)),this.isSmartEscalationsCommunityRulesEnabled?(this.buildAndTrackEvent({type:"submit_button",reason:"default-removal-reason"===this.removalReasonInput?.value?this.defaultRemovalReasonInput?.value??void 0:this.removalReasonInput?.value??void 0,notificationMethod:this.removalReasonForm?.elements["notification-method"]?.value,sendAs:this.removalReasonForm?.elements["notification-sender"]?.value,isLocked:"on"===this.getInputValue("lock"),modNote:this.getInputValue("modNote"),message:this.getInputValue("message")}),this.pubsub.publish(b.RemovalReasonStatus,G.SUCCESS)):this.close()},this.handleCancel=e=>{e.stopImmediatePropagation(),this.buildAndTrackEvent({type:"close_button"}),this.trackEvent(T()),this.close()},this.toggleButtonLoadingIndicator=()=>{this.primaryButton?.querySelector("faceplate-progress")?.classList.toggle("hidden"),this.primaryButton?.querySelector("span.submit-button-content")?.classList.toggle("opacity-0")},this.showHideSubmitButton=()=>{this.removalReasonInput?this.primaryButton?.classList.remove("hidden"):this.primaryButton?.classList.add("hidden")},this.close=()=>{this.modal?.open&&(this.modal?.close(),document.body.style.overflow="auto",document.body.style.pointerEvents="auto")},this.initSmartEscalations=()=>{const e=this.getInputValue("authorId"),t=this.getInputValue("subredditId"),s=e&&t&&this.thingId;s&&this.pubsub.publish(b.SmartEscalationsInit,{thingId:this.thingId,authorId:e,subredditId:t,removalReasonId:(this.defaultRemovalReasonInput?.value||this.removalReasonInput?.value)??"",removalReasonDisplayText:(this.defaultRemovalReasonInput?.displayText||this.removalReasonInput?.displayText)??""}),!s&&this.close()}}get removalReasonInput(){return this.shadowRoot?.querySelector('[name="removal-reason"]')}get defaultRemovalReasonInput(){return this.shadowRoot?.querySelector('[name="default-removal-reason"]')}get removalReasonForm(){return this.shadowRoot?.querySelector("removal-reason-form")}get primaryButton(){return this.shadowRoot?.querySelector('faceplate-modal [slot=primaryButton] button[type="submit"]')}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(b.AddRemovalReasonClose,this.close,!1),this.addEventListener(Q.eventName,this.handleSelectRemovalReason),this.addEventListener(ne.eventName,this.handleAddedRemovalReason),this.addEventListener(ce.eventName,this.toggleButtonLoadingIndicator),this.addEventListener(le.eventName,this.handleFormElementClicked),window.addEventListener(me.eventName,this.handleAddRemovalReasonEvent)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(b.AddRemovalReasonClose,this.close),window.removeEventListener(me.eventName,this.handleAddRemovalReasonEvent),this.removeEventListener(Q.eventName,this.handleSelectRemovalReason),this.removeEventListener(ne.eventName,this.handleAddedRemovalReason),this.removeEventListener(ce.eventName,this.toggleButtonLoadingIndicator),this.addEventListener(le.eventName,this.handleFormElementClicked)}async show(e){e&&(this.thingId=e,await this.updateComplete),this.modal?.showModal(),await(this.partial?.load()),this.buildAndTrackEvent({action:"view"}),this.primaryButton?.querySelector("faceplate-progress")?.classList.add("hidden"),this.primaryButton?.querySelector("span.submit-button-content")?.classList.remove("opacity-0"),this.showHideSubmitButton()}render(){return E` <removal-reason-form class="mb-0" enctype="application/json" method="POST" action="/svc/shreddit/mod/removal-reason"> <faceplate-modal class="max-w-[540px] w-[90v w] z-30"> <div slot="closeButton"> ${d({appearance:"secondary",leadingIcon:k({size:M.Small}),size:m.Small,attributes:{type:"button",onclick:this.handleCancel}})} </div> <input type="hidden" name="thing" value="${this.thingId}"> ${V(this.thingId,E` <faceplate-partial class="w-100" src="/svc/shreddit/removal-reason-form/${this.thingId}" loading="${R.Programmatic}"> <div class="w-100 h-4xl flex items-center justify-center"> <faceplate-progress value="20" class="animate-spin"></faceplate-progress> </div> </faceplate-partial> `)} <div slot="primaryButton"> ${d({children:E`<faceplate-progress value="20" class="animate-spin loading-icon hidden absolute left-0 right-0 m-auto w-[16px]" style="--loader-size:1rem"></faceplate-progress> <span class="submit-button-content"> Soumettre</span>`,appearance:"primary",attributes:{type:"submit",className:"w-100 relative"}})} </div> <div slot="secondaryButton"> ${d({children:"Annuler",appearance:"plain",attributes:{className:"w-100",type:"button",onclick:this.handleCancel}})} </div> </faceplate-modal> </removal-reason-form> `}};ue.styles=[o],s([i({type:Boolean,attribute:"is-smart-escalations-community-rules-enabled"})],ue.prototype,"isSmartEscalationsCommunityRulesEnabled",void 0),s([i({type:Boolean,attribute:"is-default-removals-experiment-enabled"})],ue.prototype,"isDefaultRemovalsExperimentEnabled",void 0),s([i({type:String})],ue.prototype,"thingId",void 0),s([i({type:String,attribute:"subreddit-name"})],ue.prototype,"subredditName",void 0),s([I("faceplate-modal")],ue.prototype,"modal",void 0),s([I("faceplate-partial")],ue.prototype,"partial",void 0),ue=s([n("add-removal-reason-modal")],ue);export{me as A};
