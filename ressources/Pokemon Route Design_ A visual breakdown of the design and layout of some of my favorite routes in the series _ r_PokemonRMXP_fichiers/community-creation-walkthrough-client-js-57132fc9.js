import{u as e,S as t,a as i,d as s,b as a,U as n,e as o,f as d,t as r,g as h,h as l,n as c,i as u,j as p}from"./community-creation-walkthrough-fragment-client-js-d0cc192c.js";import{t as g,_ as m,n as v,s as b,u as f,e as x,a as y,g as w,E as S,G as $,c as C,K as T,O as k,v as I,J as E,eS as N}from"./shell-a9dcd804.js";import{a as j}from"./faceplate-textarea-input-9ac7fafc.js";import{s as R,x as z,H as B,I as L,A,l as q,L as H,M as P,bv as D,a as U,ck as M,h as W,ac as _,cl as F}from"./icon-d7ad820f.js";import{T as V}from"./validate-image-9f48337a.js";import"./faceplate-form-f63ed129.js";import{o as X,aj as O}from"./age-gate-standalone-client-js-55e13342.js";import{e as Y}from"./filterNullish-9ec33a16.js";import"./shop-gallery-data-fetcher-client-js-cd71f78d.js";import"./faceplate-search-input-28db656a.js";import{l as Z,L as K}from"./expandable-section-header-a5b37930.js";import{g as G}from"./index-e9ae10a6.js";import"./faceplate-radio-input-b52ca406.js";import"./index-b42a465d.js";import"./faceplate-tooltip-c6801851.js";import"./community-image-upload-ee4e661e.js";import"./emoji-template-table-client-js-797a5add.js";import"./chat-mobile-xpromo-client-js-342f9966.js";import"./text-input-1e857ee0.js";import"./constants-775ffd1d.js";import"./helpers-8837cd77.js";import"./user-flair-aefa9eac.js";const J=z`<span class="text-12 text-neutral-content-weak mx-2xs">\u00B7</span>`;let Q=class extends R{constructor(){super(...arguments),this.name="",this.description="",this.shouldShowDefaultImages=!1}renderPublicDescriptionText(){return z`<p class="m-0 text-ellipsis mb-2xs"> ${0===this.description.length?"Description de ta communauté":this.description} </p>`}renderActiveAndTotalSubscribers(){const e=z`<span><faceplate-number number="1" pretty=""></faceplate-number> en ligne</span>`;return z` <div class="text-12 text-neutral-content-weak"> <span>${Y(z,1,!0)}</span>${J}${e} </div> `}renderTitleLink(){const e=z`<span class="block font-semibold text-20 text-neutral-content-strong hover:text-neutral-content-strong hover:no-underline pb-2xs">r/${0===this.name.length?"nomdelacommunaute":this.name}</span>`;return z`${e}`}renderSubredditIcon(){return void 0===this.avatar||""===this.avatar?X({children:b({appearance:"brand",leadingIcon:B({size:L.XXLarge}),size:f.Large,attributes:{tabindex:"-1","aria-hidden":"true"}}),attributes:{tabindex:"-1","aria-hidden":"true"},appearance:"icon",size:"lg"}):z`<img loading="lazy" width="42" height="42" class="rounded-[50%] overflow-hidden border-[0.5px] border-solid" src="${this.avatar}" alt="An avatar for the subreddit">`}render(){return z`<div class="flex rounded shadow-sm xs:rounded-4 flex-col relative max-w-[268px] grow max-h-[350px] overflow-auto"> ${this.shouldShowDefaultImages||this.banner?this.banner?z`<div class="w-100"> <img class="max-w-[100%] w-100 object-cover max-h-[40px] rounded-t-[12px]" src="${this.banner}" alt="Banner"> </div>`:z`<div class="w-100 bg-orangered-50 min-h-[32px] max-h-[40px]"></div>`:A} <div class="flex justify-start gap-x-md m-md mb-0"> ${this.avatar||this.shouldShowDefaultImages?z`<span class="block mt-2xs">${this.renderSubredditIcon()}</span>`:A} <div class="flex-col flex justify-center"> ${this.renderTitleLink()} <div>${this.renderActiveAndTotalSubscribers()}</div> </div> </div> <div class="p-sm pt-xs">${this.renderPublicDescriptionText()}</div> </div>`}};Q.styles=[g],m([v({type:String})],Q.prototype,"name",void 0),m([v({type:String})],Q.prototype,"description",void 0),m([v({type:String})],Q.prototype,"avatar",void 0),m([v({type:String})],Q.prototype,"banner",void 0),m([v({type:Boolean,attribute:"show-default-images"})],Q.prototype,"shouldShowDefaultImages",void 0),Q=m([x("community-creation-preview")],Q);const ee=new RegExp("^[A-Za-z0-9][A-Za-z0-9_]{0,20}$"),te=(e,t)=>I({count:t,one:`${e} sur ${t} caractère`,few:`${e} sur ${t} caractères`,many:`${e} sur ${t} caractères`,other:`${e} sur ${t} caractères`}),ie=y(R);let se=class extends ie{constructor(){super(...arguments),this.events=new S(this,(()=>window)),this.subreddit={name:"",description:""},this.nameTaken=!1,this.validCharsName=!0,this.descriptionTooLong=!1,this.prefixText="",this.handleNameChange=t=>{const i=t.target.value.trim();this.nameInput.value=i,this.subreddit=e(this.subreddit,{name:i}),this.prefixText=""!==i?"r/":"",this.validCharsName=ee.test(i)||""===i,this.nameTaken&&this.validateNameTaken(),this.nameInputHelperText?.setMessage(this.getNameHelperText(),$.error),this.nameInputHelperText?.requestUpdate()},this.handleDescriptionChange=t=>{const i=t.target.value;this.descriptionInput?.setCustomValidity(""),this.descriptionInputHelperText?.setMessage(""),this.subreddit=e(this.subreddit,{description:i}),this.descriptionTooLong=i.length>500,this.descriptionTooLong&&this.setDescriptionTooLong()}}get submitButton(){return this.querySelector('button[type="submit"]')}get nameInput(){return this.shadowRoot?.querySelector('faceplate-text-input[name="name"]')}get descriptionInput(){return this.shadowRoot?.querySelector("faceplate-textarea-input")}get nameInputHelperText(){return this.nameInput?.shadowRoot?.querySelector('faceplate-form-helper-text[name="name"]')}get descriptionInputHelperText(){return this.descriptionInput?.shadowRoot?.querySelector('faceplate-form-helper-text[name="description"]')}async firstUpdated(){await this.updateComplete,this.querySelector("faceplate-pagination-indicator")?.shadowRoot?.querySelectorAll("button.dot").forEach((e=>{e.tabIndex=-1,e.ariaHidden="true"})),this.dispatchEvent(C("refresh_focus",{title:"Parle-nous de ta communauté",ariaLabel:"Parle-nous de ta communauté. "+t(1)})),this.events.define(i,(async e=>{e.stopPropagation(),await this.validateNameTaken(),this.formValid()&&(this.trackEvent(s(this.subreddit.description?.length||0)),this.dispatchSubredditUpdatedEvent("next"))})),this.events.define(a,(async e=>{e.stopPropagation(),this.dispatchSubredditUpdatedEvent("back")}))}update(e){this.validateNextButtonDisabled(),super.update(e)}dispatchSubredditUpdatedEvent(e){const t=new CustomEvent(n,{bubbles:!0,composed:!0,detail:{subreddit:this.subreddit,direction:e,source:o.NameAndDescription}});this.dispatchEvent(t)}dispatchErrors(e){const t=C("faceplate-alert",{level:$.error,cause:"uncategorized",message:e});this.dispatchEvent(t)}async validateNameTaken(){if(this.nameTaken||this.nameInput&&this.nameInput.checkValidity()){try{if(null===(await T({operation:k.CommunityName,variables:{subredditName:this.subreddit.name||""}})).data.subreddit)return this.nameTaken=!1,void this.resetNameInputValidation();this.trackEvent(d({reason:"Name already taken",setting_value:this.subreddit.name})),this.setNameInputTakenValidationMessage()}catch(e){this.dispatchErrors("Erreur du serveur. Merci de réessayer plus tard. ")}this.nameTaken=!0}}setNameInputTakenValidationMessage(){this.nameInput?.setCustomValidity("invalid"),this.nameInputHelperText?.setMessage(`Le nom « r/${this.subreddit.name} » est déjà pris`,$.error),this.nameInput?.setCustomValidity("invalid")}setDescriptionTooLong(){this.descriptionInputHelperText?.setMessage("Description trop longue.",$.error),this.descriptionInput?.setCustomValidity("invalid")}resetNameInputValidation(){this.nameInput.setCustomValidity(""),this.nameInputHelperText?.setMessage("")}getNameHelperText(){return this.validCharsName?3>this.subreddit.name.length?"Merci de rajouter un minimum de 3 caractères à ce texte":"":"Caractères autorisés : lettres, chiffres et tirets bas"}formValid(){return null!==this.subreddit.name&&this.subreddit.name.length>=3&&this.subreddit.name.length<=21&&null!==this.subreddit.description&&this.subreddit.description.length>=1&&this.subreddit.description.length<=500&&!this.nameTaken&&this.validCharsName}validateNextButtonDisabled(){this.submitButton.disabled=!this.formValid()}render(){return z` <div class="xs:w-[752px] h-16 pr-12 py-2.5 rounded-2xl justify-start items-center pb-xl inline-flex"> <div class="grow shrink basis-0 flex-col justify-center items-start gap-[4px] inline-flex"> <div class="self-stretch text-sm font-normal text-tone-2 leading-tight">${"Un nom et une description aident les redditors à comprendre en quoi consiste ta communauté."}</div> </div> </div> <div class="mb-0"> <div class="flex gap-md flex-col-reverse flow xs:flex-row"> <div class="min-w-[55%]"> <faceplate-form class="w-100" validation-trigger="change"> <faceplate-text-input data-testid="name-input" class="block flex-1 pb-sm pt-sm" type="text" name="name" helper-text-message="${this.getNameHelperText()}" pattern="^[A-Za-z0-9][A-Za-z0-9_]{2,20}$" maxLength="21" value="${q(this.subreddit.name)}" required @input="${this.handleNameChange}" novalidate appearance="${j.SECONDARY}" prefix="${q(this.prefixText)}" @focusout="${this.validateNameTaken}" character-count character-count-aria-label="${te(this.subreddit.name.length,21)}" helper-text-screen-reader-msg="Nombre maximal de caract\u00E8res atteint"> <span slot="label"> ${"Nom de la communauté"} </span> </faceplate-text-input> </faceplate-form> <faceplate-textarea-input size="expanded" appearance="${j.SECONDARY}" @input="${this.handleDescriptionChange}" value="${q(this.subreddit.description)}" name="description" required novalidate helper-text-message="${"Merci de réduire la longueur de ce texte de 500 caractères minimum"}" rows="8" class="min-w-full xs:pb-lg" character-count character-count-aria-label="${te(this.subreddit.description.length,500)}"><span slot="label">${"Description"}</span> </faceplate-textarea-input> </div> <div class="flex items-start grow"> <community-creation-preview class="w-100 flex justify-center" name="${q(this.subreddit.name)}" description="${q(this.subreddit.description)}"></community-creation-preview> </div> </div> <div class="mb-0 pt-[42px]"> <slot name="buttons-bar"></slot> </div> </div> `}};se.styles=[g],m([w()],se.prototype,"subreddit",void 0),m([w()],se.prototype,"nameTaken",void 0),m([w()],se.prototype,"validCharsName",void 0),m([w()],se.prototype,"descriptionTooLong",void 0),se=m([x("community-creation-name-description")],se);const ae=new Set(["tx1_20v2840","tx1_15teiqi","tx1_2b40g1a","tx1_14gsvq1","tx1_18c3qbq","tx1_12l080p","tx1_1nlg6jt","tx1_192ms0u","tx1_1ri658n"]),ne=3,oe=y(R);let de=class extends oe{constructor(){super(...arguments),this.events=new S(this,(()=>window)),this.subreddit={topics:[]},this.selectedTopics=[],this.topics=new Array,this._loading=!1,this.maxTopicsSelected=!1,this.gqlTopics=new Array,this.filter="",this.removeSelected=e=>{this.maxTopicsSelected=!1,this.selectedTopics=this.selectedTopics.filter((t=>t!==e))},this.onTopicsClick=(e,t)=>{this.maxTopicsSelected=!1,e?this.selectedTopics.length<ne?(this.selectedTopics.push(t),this.requestUpdate()):this.maxTopicsSelected=!0:this.selectedTopics=this.selectedTopics.filter((e=>e!==t))},this.handleFilterChange=e=>{const t=e.target.value;this.filter=t,this.topics=this.gqlTopics.flatMap((e=>{if(e.displayName.toLowerCase().indexOf(t.toLowerCase())>-1)return[{...e,children:e.children}];{const i=e.children?e.children.filter((e=>e.displayName.toLowerCase().indexOf(t.toLowerCase())>-1)):[];return i.length>0?{...e,children:i}:[]}}))}}get topicsContainer(){return this.shadowRoot.querySelector("#topics")}get submitButton(){return this.querySelector('button[type="submit"]')}async firstUpdated(){this.loadTopics(),await this.updateComplete,this.querySelector("faceplate-pagination-indicator")?.shadowRoot?.querySelectorAll("button.dot").forEach((e=>{e.tabIndex=-1,e.ariaHidden="true"})),this.dispatchEvent(C("refresh_focus",{title:"Ajouter des thèmes",ariaLabel:"Ajouter des thèmes. "+t(3)})),this.events.define(i,(async e=>{e.stopPropagation(),this.submitButtonEnabled()&&(this.trackEvent(r(this.subreddit.topics.map((e=>e.displayName)),this.subreddit.topics.map((e=>e.id)))),this.dispatchSubredditUpdatedEvent("next"))})),this.events.define(a,(async e=>{e.stopPropagation(),this.dispatchSubredditUpdatedEvent("back")}))}dispatchSubredditUpdatedEvent(e){const t=new CustomEvent(n,{bubbles:!0,composed:!0,detail:{subreddit:{topics:this.filterSelected(this.gqlTopics)},direction:e,source:o.Topics}});this.dispatchEvent(t)}update(e){this.enableSubmitButtonIfValid(),e.has("subreddit")&&(this.selectedTopics=this.subreddit.topics?.map((e=>e.id))||[]),super.update(e)}filterSelected(e){let t=new Array;return e.forEach((e=>{this.selectedTopics.includes(e.id)&&t.push(e);const i=e.children?this.filterSelected(e.children):[];i.length>0&&(t=t.concat(i))})),t}async loadTopics(){this._loading=!0;const e=await T({operation:k.TaxonomyTopicsInfo});this._loading=!1;const t=e.data?.taxonomyInfo?.topics;if(t)t.sort(((e,t)=>{const i=ae.has(e.id),s=ae.has(t.id);return i&&!s?1:!i&&s?-1:e.displayName.localeCompare(t.displayName)})),this.gqlTopics=t,this.topics=this.gqlTopics;else{const e="Une erreur s’est produite lors de la récupération des thèmes. Merci de réessayer plus tard.",t=C("faceplate-alert",{level:$.error,cause:"uncategorized",message:e});this.dispatchEvent(t)}}dispatchWarningEvent(e,t,i){const s=new CustomEvent(h,{bubbles:!0,composed:!0,detail:{title:e,message:t,secondaryButton:i}});this.dispatchEvent(s)}submitButtonEnabled(){return this.selectedTopics.length>0&&this.selectedTopics.length<=ne}enableSubmitButtonIfValid(){this.submitButton.disabled=!this.submitButtonEnabled()}renderTopics(){return 0===this.topics.length?z`<div> ${O({attributes:{type:"button"},children:z`<span class="flex"><span class="select-none text-12 font-semibold">Aucun th\u00E8me ne correspond \u00E0 ta recherche </span></span>`,leadingIcon:H()})} </div>`:z`<div id="topics" class="flex flex-col gap-lg h-[250px] xs:h-[330px] overflow-x-hidden overflow-y-scroll"> ${this.topics.map((e=>this.renderTopic(e)),this)} </div>`}renderTopic({children:e,displayName:t,icon:i}){return z` <fieldset aria-labelledby="title-${t}" class="topic-section p-0 m-0 border-0"> <legend> <h3 class="my-0 text-14">${i}<span class="ml-2xs">${t}</span></h3> </legend> ${e?z`<div class="flex flex-wrap gap-x-2xs gap-y-xs mt-2xs"> ${e.map((e=>this.renderTopicContainer(e,this.selectedTopics.indexOf(e.id)>-1)))} </div>`:A} </fieldset> `}renderTopicContainer(e,t){const i=()=>{this.onTopicsClick(!t,e.id)};return z` <div class="topic-container" id="container_${e.id}" data-topic="${e.displayName}"> <label for="${e.id}" class="group"> ${O({selected:t,attributes:{id:e.id,type:"button","aria-pressed":t?"true":"false",onclick:i},deleteButtonConfig:{screenReaderContent:`Désélectionner le thème ${e.displayName}`,attributes:{onclick:e=>{e.preventDefault(),e.stopPropagation(),i()},type:"button",id:`unselect-${e.id}`}},children:z`<span class="select-none text-12 font-semibold">${e.displayName} </span>`})} </label> </div> `}renderSelectedTopics(){return z`<div id="selected-topics-container" class="min-h-[32px] h-fit flex flex-wrap justify-start gap-xs"> ${this.filterSelected(this.gqlTopics).map((e=>O({children:e.displayName,selected:!0,attributes:{type:"button",id:`selected-topic-${e.id}`,className:"bg-neutral-background rounded-1 border-neutral-border",onclick:()=>{this.removeSelected(e.id)}},deleteButtonConfig:{screenReaderContent:`Désélectionner le thème ${e.displayName}`,attributes:{onclick:()=>{this.removeSelected(e.id)},type:"button",id:`unselect-${e.id}`}}})))} </div>`}render(){const e=this._loading?z`<shreddit-loading class="pointer-events-none h-[8rem] mt-4xl"></shreddit-loading>`:this.renderTopics();return z`<div class="w-96 h-16 pr-12 py-2.5 rounded-2xl justify-start items-center pb-xl inline-flex"> <div class="grow shrink basis-0 flex-col justify-center items-start gap-[4px] inline-flex"> <div class="self-stretch text-sm font-normal text-tone-2 leading-tight">${"Ajoute jusqu’à 3 thèmes pour permettre aux redditors intéressé·es de trouver ta communauté."}</div> </div> </div> <faceplate-search-input appearance="${V.SECONDARY}" class="w-full ml-0 mt-sm" type="text" name="filter" @input="${this.handleFilterChange}" value="${this.filter}" placeholder="${"Filtrer les thèmes"}" novalidate inputmode></faceplate-search-input> <h3 class="w-full flex justify-start text-16 my-xs"> ${t=this.selectedTopics.length.toString(),`Thèmes ${t}/3 `} </h3> ${this.renderSelectedTopics()} <div data-testid="mature-label-container" class="w-96 text-danger-content min-h-[32px] text-xs font-normal"> ${this.maxTopicsSelected?I({count:ne,one:`Seul ${ne} thème peut être ajouté`,few:`Seuls ${ne} thèmes peuvent être ajoutés`,many:`Seuls ${ne} thèmes peuvent être ajoutés`,other:`Seuls ${ne} thèmes peuvent être ajoutés`}):this.selectedTopics.filter((e=>ae.has(e))).length>0?"Si tu sélectionnes des thèmes sensibles, ta communauté sera étiquetée comme étant réservée aux plus de 18 ans et sa visibilité sera limitée.":""} </div> ${e} <slot></slot> <div class="pt-[40px]"> <slot name="buttons-bar"></slot> </div>`;var t}};de.styles=[g,E(".bg-rose-100 {\n  background-color: #fceee8;\n}\n.bg-slate-200 {\n  background-color: #e5ebee;\n}\n.fieldset-disabled {\n  opacity: 0.4;\n  pointer-events: none;\n}\n.bg-parent-topic-selected {\n  background-color: #d4c4c4;\n}\n")],m([w()],de.prototype,"subreddit",void 0),m([w()],de.prototype,"selectedTopics",void 0),m([w()],de.prototype,"topics",void 0),m([w()],de.prototype,"_loading",void 0),m([w()],de.prototype,"maxTopicsSelected",void 0),de=m([x("community-creation-topic-selection")],de);const re=[{value:N.Public},{value:N.Restricted},{value:N.Private},{adminRequired:!0,value:N.EmployeesOnly}],he=y(R);let le=class extends he{constructor(){super(...arguments),this.events=new S(this,(()=>window)),this.subreddit={type:N.Public,isNSFW:!1},this.isAdmin=!1,this.forceNSFW=!1,this.renderRadioItem=t=>{const i=t.value===this.subreddit.type,{label:s,description:a,icon:n,iconSelected:o}=G({type:t.value})??{};return z`<label> ${Z({onClick:()=>this.subreddit=e(this.subreddit,{type:t.value}),label:s??"",size:K.Medium,attributes:{role:"menuitemradio"},leadingIcon:i?o:n,trailingSlot:z`<faceplate-radio-input class="m-0" @input="${this.typeInputChangeHandler}" ?checked="${i}" name="type" value="${t.value}"></faceplate-radio-input>`,description:a,selected:i})} </label>`}}get _isSubredditNsfw(){return this.subreddit.isNSFW||this.forceNSFW}typeInputChangeHandler(t){const i=t.target.value;this.subreddit=e(this.subreddit,{type:i})}renderTypeInput(){return z` <div class="mb-xs"> <ul role="menu" class="pl-0"> ${re.map((e=>e.adminRequired&&!this.isAdmin?A:this.renderRadioItem(e)))} </ul> </div> `}async firstUpdated(e){super.firstUpdated(e);for(const e of this.subreddit.topics||[])if(ae.has(e.id)){this.forceNSFW=!0;break}await this.updateComplete,this.querySelector("faceplate-pagination-indicator")?.shadowRoot?.querySelectorAll("button.dot").forEach((e=>{e.tabIndex=-1,e.ariaHidden="true"})),this.dispatchEvent(C("refresh_focus",{title:"De quel genre de communauté s’agit-il ?",ariaLabel:"De quel genre de communauté s’agit-il ?. "+t(4)})),this.events.define(i,(async e=>{e.stopPropagation(),this.trackEvent(l(this.subreddit.type.toString())),this.trackEvent(c(this._isSubredditNsfw)),this.dispatchSubredditUpdatedEvent("next")})),this.events.define(a,(async e=>{e.stopPropagation(),this.dispatchSubredditUpdatedEvent("back")}))}dispatchSubredditUpdatedEvent(e){const t=new CustomEvent(n,{bubbles:!0,composed:!0,detail:{subreddit:{...this.subreddit,isNSFW:this._isSubredditNsfw},direction:e,source:o.Type}});this.dispatchEvent(t)}renderNsfwInput(){const t=this._isSubredditNsfw,i=z`<span slot="trigger" class="w-full min-w-100 ${this.forceNSFW?"opacity-75":""}"> ${Z({onClick:()=>{this.forceNSFW||(this.subreddit=e(this.subreddit,{isNSFW:!t}))},label:"Sensible (18+) ",attributes:{role:"menuitemcheckbox"},size:K.Medium,leadingIcon:t?P():D(),trailingSlot:z` <faceplate-switch-input class="-mr-xs" data-testid="nsfw-input" name="isNsfw" ?checked="${t}" @click="${e=>{this.forceNSFW&&e.preventDefault()}}"> </faceplate-switch-input> `,description:"Les membres doivent avoir 18 ans ou plus pour voir ce contenu et y contribuer"})} </span>`;return this.forceNSFW?z`<faceplate-tooltip position="bottom-start" appearance="inverted" trigger-event="hover" class="w-full" enter-delay="100"> ${i} ${z`<div class="w-[190px]">${"Communauté marquée comme sensible (18+) car tu as sélectionné un thème sensible"}</div>`} </faceplate-tooltip>`:i}render(){return z`<div class="min-h-[600px]"> <div class="w-96 h-16 pr-12 py-2.5 rounded-2xl justify-start items-center pb-xl inline-flex"> <div class="grow shrink basis-0 flex-col justify-center items-start gap-[4px] inline-flex"> <div class="self-stretch text-sm font-normal text-tone-2 leading-tight">${z`D\u00E9cide qui peut consulter et contribuer \u00E0 ta communaut\u00E9. Seules les communaut\u00E9s publiques apparaissent dans la recherche. <strong>Important\u00A0:</strong> une fois le param\u00E8tre configur\u00E9, tu devras soumettre une demande de modification du type de ta communaut\u00E9..`}</div> </div> </div> ${this.renderTypeInput()} <div class="w-full h-0 border border-black border-opacity-20 mb-sm border-solid"></div> ${this.forceNSFW?z`<div class="w-96 text-danger-content text-xs font-normal"> ${"Communauté marquée comme sensible (18+) car tu as sélectionné un thème sensible"} </div>`:A} ${this.renderNsfwInput()} <slot name="buttons-bar"></slot> </div>`}};le.styles=[E("\n    @media (max-width: 400px) {\n      :host {\n        --horizontal-padding: 16px;\n        --topbar-horizontal-padding: 16px;\n        max-height: none;\n        width: 100%;\n        max-width: none;\n        border-radius: 0;\n        margin-top: 20px;\n        padding-bottom: 0;\n        transition: padding-bottom 200ms ease-in-out;\n        z-index: 5;\n        min-height:100vh;\n      }\n    }"),g],m([w()],le.prototype,"subreddit",void 0),m([v({type:Boolean,attribute:"admin"})],le.prototype,"isAdmin",void 0),m([w()],le.prototype,"forceNSFW",void 0),le=m([x("community-creation-walkthrough-type")],le);const ce="white",ue="#63f050",pe="black";let ge=class extends R{constructor(){super(...arguments),this.fileName="cropped_image.png",this.canvasClasses="w-100 h-100",this.selectionWidth=100,this.selectionHeight=100,this.keepAspectRatio=!0,this.resizable=!0,this.adjustSelectionToBorder=!1,this._canvasEvents=new S(this,(()=>this.canvas)),this.imageSaved=!1,this.imageToRender=new Image,this.imagePosition={x:0,y:0,width:0,height:0},this.scale=1,this.guide={x:0,y:0,width:0,height:0},this.isDragging=!1,this.resizeCorner="",this.offsetX=0,this.offsetY=0,this.zoomLevel=1,this.maxZoomLevel=3,this.onMouseDown=e=>{const t=this.canvas.getBoundingClientRect();let i,s;e instanceof MouseEvent?(i=e.clientX-t.left,s=e.clientY-t.top):(i=e.touches[0].clientX-t.left,s=e.touches[0].clientY-t.top);if(i>=this.guide.x-8&&i<=this.guide.x+this.guide.width+8&&s>=this.guide.y-8&&s<=this.guide.y+this.guide.height+8){this.offsetX=i-this.guide.x,this.offsetY=s-this.guide.y;const e=16;i>=this.guide.x-e/2&&i<=this.guide.x+e/2&&s>=this.guide.y-e/2&&s<=this.guide.y+e/2?this.resizeCorner="top-left":i>=this.guide.x+this.guide.width-e/2&&i<=this.guide.x+this.guide.width+e/2&&s>=this.guide.y-e/2&&s<=this.guide.y+e/2?this.resizeCorner="top-right":i>=this.guide.x-e/2&&i<=this.guide.x+e/2&&s>=this.guide.y+this.guide.height-e/2&&s<=this.guide.y+this.guide.height+e/2?this.resizeCorner="bottom-left":i>=this.guide.x+this.guide.width-e/2&&i<=this.guide.x+this.guide.width+e/2&&s>=this.guide.y+this.guide.height-e/2&&s<=this.guide.y+this.guide.height+e/2?this.resizeCorner="bottom-right":this.isDragging=!0}},this.onMouseMove=e=>{const t=this.canvas.getBoundingClientRect();let i,s;e instanceof MouseEvent?(i=e.clientX-t.left,s=e.clientY-t.top):(i=e.touches[0].clientX-t.left,s=e.touches[0].clientY-t.top);i>=this.guide.x-8&&i<=this.guide.x+this.guide.width+8&&s>=this.guide.y-8&&s<=this.guide.y+this.guide.height+8?this.canvas.style.cursor="move":this.canvas.style.cursor="default",this.isDragging?this.moveSelectionArea(e):this.resizable&&this.resizeCorner&&this.resizeSelectionArea(e)},this.onMouseUp=()=>{this.isDragging=!1,this.resizeCorner=""},this.handleCancelKeyUp=e=>{"Enter"===e.key&&this.cancelClick()},this.handleSaveKeyUp=e=>{"Enter"===e.key&&this.saveCroppedImage()}}get canvas(){return this.shadowRoot.querySelector("canvas")}drawSelectionArea(e){e.strokeStyle=ce,e.lineWidth=2,e.strokeRect(this.guide.x,this.guide.y,this.guide.width,this.guide.height);e.fillStyle="rgba(0, 0, 0, 0.3)",e.fillRect(0,0,this.guide.x,this.canvas.height),e.fillRect(this.guide.x+this.guide.width,0,this.canvas.width-(this.guide.x+this.guide.width),this.canvas.height),e.fillRect(this.guide.x,0,this.guide.width,this.guide.y),e.fillRect(this.guide.x,this.guide.y+this.guide.height,this.guide.width,this.canvas.height-(this.guide.y+this.guide.height))}drawResizeHandles(e){e.fillStyle=ce,e.strokeStyle=pe,e.lineWidth=1,e.fillRect(this.guide.x-4,this.guide.y-4,8,8),e.strokeRect(this.guide.x-4,this.guide.y-4,8,8),e.fillRect(this.guide.x+this.guide.width-4,this.guide.y-4,8,8),e.strokeRect(this.guide.x+this.guide.width-4,this.guide.y-4,8,8),e.fillRect(this.guide.x-4,this.guide.y+this.guide.height-4,8,8),e.strokeRect(this.guide.x-4,this.guide.y+this.guide.height-4,8,8),e.fillStyle=ue,e.strokeStyle=ue,e.fillRect(this.guide.x+this.guide.width-4,this.guide.y+this.guide.height-4,8,8),e.strokeRect(this.guide.x+this.guide.width-4,this.guide.y+this.guide.height-4,8,8)}drawCanvas(){if(this.imgSrc){const e=this.canvas.getContext("2d");if(e){e.clearRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=pe,e.fillRect(0,0,this.canvas.width,this.canvas.height);const t=this.imagePosition.width*this.zoomLevel,i=this.imagePosition.height*this.zoomLevel,s=(this.canvas.width-t)/2,a=(this.canvas.height-i)/2;e.drawImage(this.imageToRender,s,a,t,i),this.drawSelectionArea(e),this.resizable&&this.drawResizeHandles(e)}}}moveSelectionArea(e){const t=this.canvas.getBoundingClientRect();let i,s;e instanceof MouseEvent?(i=e.clientX-t.left,s=e.clientY-t.top):(i=e.touches[0].clientX-t.left,s=e.touches[0].clientY-t.top);let a=i-this.offsetX;a<0?a=0:a+this.guide.width>this.canvas.width&&(a=this.canvas.width-this.guide.width);let n=s-this.offsetY;n<0?n=0:n+this.guide.height>this.canvas.height&&(n=this.canvas.height-this.guide.height),this.guide.x=a,this.guide.y=n,this.drawCanvas()}resizeSelectionArea(e){const t=this.canvas.getBoundingClientRect();let i;i=e instanceof MouseEvent?e.clientX-t.left:e.touches[0].clientX-t.left;const s=30;let a=0,n=0;switch(this.resizeCorner){case"top-left":a=this.guide.width-(i-this.guide.x),a=a>s?a:s,n=a*(this.keepAspectRatio?this.guide.height/this.guide.width:1),this.guide.x=i,this.guide.y+=this.guide.height-n,this.guide.width-=a,this.guide.height=n;break;case"top-right":a=i-this.guide.x,a=a>s?a:s,n=a*(this.keepAspectRatio?this.guide.height/this.guide.width:1),this.guide.y+=this.guide.height-n,this.guide.width=a,this.guide.height=n;break;case"bottom-left":a=this.guide.width-(i-this.guide.x),a=a>s?a:s,n=a*(this.keepAspectRatio?this.guide.height/this.guide.width:1),this.guide.x=i,this.guide.width=a,this.guide.height=n;break;case"bottom-right":a=i-this.guide.x,a=a>s?a:s,n=a*(this.keepAspectRatio?this.guide.height/this.guide.width:1),this.guide.width=a,this.guide.height=n}a>0&&n>0&&(this.guide.width=a,this.guide.height=n,this.drawCanvas())}saveCroppedImage(){const e=1/this.scale,t=document.createElement("canvas"),i=t.getContext("2d");t.width=this.canvas.width*e,t.height=this.canvas.height*e;const s=this.imagePosition.width*e*this.zoomLevel,a=this.imagePosition.height*e*this.zoomLevel,n=(t.width-s)/2,o=(t.height-a)/2;i.drawImage(this.imageToRender,n,o,s,a);const d=this.guide.x*e,r=this.guide.y*e,h=this.guide.width*e,l=this.guide.height*e,c=document.createElement("canvas"),u=c.getContext("2d");c.width=h,c.height=l,u.drawImage(t,d,r,h,l,0,0,h,l),this.imageSaved=!0,c.toBlob((e=>{if(e&&this.onSave){const t=new File([e],this.fileName,{type:"image/png"});this.onSave(t)}}))}zoomIn(){this.zoomLevel<this.maxZoomLevel&&(this.zoomLevel+=.1,this.drawCanvas())}zoomOut(){this.zoomLevel>.5&&(this.zoomLevel-=.1,this.drawCanvas())}resizeImage(){this.scale=Math.min(this.canvas.width/this.imageToRender.width,this.canvas.height/this.imageToRender.height),this.imagePosition.width=this.imageToRender.width*this.scale,this.imagePosition.height=this.imageToRender.height*this.scale,this.imagePosition.x=(this.canvas.width-this.imagePosition.width)/2,this.imagePosition.y=(this.canvas.height-this.imagePosition.height)/2,this.adjustSelectionToBorder&&(this.imagePosition.width<this.imagePosition.height?this.adjustSelectionToWidth():this.adjustSelectionToHeight())}adjustSelectionToWidth(){const e=this.guide.width,t=this.guide.height;this.guide.width=this.imagePosition.width;let i=this.selectionHeight;this.keepAspectRatio&&(i=this.guide.width/this.selectionWidth*this.selectionHeight),i>this.canvas.height&&(i=this.canvas.height-5,this.guide.width=i/this.selectionHeight*this.selectionWidth),this.guide.height=i,this.guide.x=this.guide.x-(this.guide.width-e)/2,this.keepAspectRatio&&(this.guide.y=this.guide.y-(this.guide.height-t)/2)}adjustSelectionToHeight(){const e=this.guide.height,t=this.guide.width;this.guide.height=this.imagePosition.height;let i=this.selectionWidth;this.keepAspectRatio&&(i=this.guide.height/this.selectionHeight*this.selectionWidth),i>this.canvas.width&&(i=this.canvas.width-5,this.guide.height=i/this.selectionWidth*this.selectionHeight),this.guide.width=i,this.guide.y=this.guide.y-(this.guide.height-e)/2,this.keepAspectRatio&&(this.guide.x=this.guide.x-(this.guide.width-t)/2)}addCanvasEventListeners(){this._canvasEvents.define("mousedown",this.onMouseDown),this._canvasEvents.define("mousemove",this.onMouseMove),this._canvasEvents.define("mouseup",this.onMouseUp),this._canvasEvents.define("mouseout",this.onMouseUp),this._canvasEvents.define("touchstart",this.onMouseDown),this._canvasEvents.define("touchmove",this.onMouseMove),this._canvasEvents.define("touchend",this.onMouseUp)}async firstUpdated(){this.addCanvasEventListeners(),this.canvas.width=this.canvas.getBoundingClientRect().width,this.canvas.height=this.canvas.getBoundingClientRect().height,this.guide={x:this.canvas.getBoundingClientRect().width-this.selectionWidth/2,y:(this.canvas.getBoundingClientRect().height-this.selectionHeight)/2,width:this.selectionWidth,height:this.selectionHeight},this.imageToRender.onload=()=>{this.resizeImage(),this.drawCanvas()},this.imageToRender.src=this.imgSrc||""}updated(e){(e.has("selectionWidth")||e.has("selectionHeight"))&&(this.guide.width=parseInt(this.selectionWidth.toString()),this.guide.height=parseInt(this.selectionHeight.toString()),this.guide.x=(this.canvas.getBoundingClientRect().width-parseInt(this.selectionWidth.toString()))/2,this.guide.y=(this.canvas.getBoundingClientRect().height-parseInt(this.selectionHeight.toString()))/2,this.drawCanvas()),super.updated(e)}cancelClick(){this.onCancel&&this.onCancel()}render(){return z` <div class="${this.canvasClasses}"> <div class="p-xs bg-black rounded-1 h-100 w-100" style="${this.canvasWidth?`width:${this.canvasWidth}px; `:""}${this.canvasHeight?`height:${this.canvasHeight}px;`:""}"> <canvas class="w-full h-full inline-block"></canvas> </div> <div class="flex justify-between pt-xs"> <div class="flex justify-start gap-[8px]"> <div class="flex flex-col"> ${b({appearance:"secondary",attributes:{type:"square",onclick:this.zoomOut,"aria-label":"Dézoomer"},shape:"square",size:f.Small,leadingIcon:M({size:L.Small})})} </div> <div class="flex flex-col"> ${b({appearance:"secondary",attributes:{type:"button",onclick:this.zoomIn,"aria-label":"Zoomer"},shape:"square",size:f.Small,leadingIcon:W({size:L.Small})})} </div> </div> <div class="flex justify-end"> <div @click="${this.cancelClick}" @keyup="${this.handleCancelKeyUp}"> ${this.cancelButton?this.cancelButton:b({appearance:"secondary",attributes:{id:"image-cropper-cancel-button",className:"ml-sm","data-testid":"submit-button",type:"submit",slot:"primaryButton"},children:"Annuler",size:f.Small})} </div> <div @click="${this.saveCroppedImage}" @keyup="${this.handleSaveKeyUp}"> ${this.saveButton?this.saveButton:b({appearance:"primary",attributes:{id:"image-cropper-save-button",className:"ml-sm","data-testid":"submit-button",type:"submit",slot:"primaryButton"},children:"Enregistrer",size:f.Small})} </div> </div> </div> </div> `}};ge.styles=[U`:host{display:block;padding:20px}`,g],m([v({type:String,attribute:"file-name"})],ge.prototype,"fileName",void 0),m([v({type:String,attribute:"canvas-classes"})],ge.prototype,"canvasClasses",void 0),m([v({type:String,attribute:"img-src"})],ge.prototype,"imgSrc",void 0),m([v({type:Number,attribute:"selection-width"})],ge.prototype,"selectionWidth",void 0),m([v({type:Number,attribute:"selection-height"})],ge.prototype,"selectionHeight",void 0),m([v({type:Number})],ge.prototype,"canvasWidth",void 0),m([v({type:Number})],ge.prototype,"canvasHeight",void 0),m([v()],ge.prototype,"cancelButton",void 0),m([v()],ge.prototype,"onCancel",void 0),m([v()],ge.prototype,"saveButton",void 0),m([v()],ge.prototype,"onSave",void 0),m([v({type:Boolean})],ge.prototype,"keepAspectRatio",void 0),m([v({type:Boolean})],ge.prototype,"resizable",void 0),m([v({type:Boolean,attribute:"adjust-selection-to-border"})],ge.prototype,"adjustSelectionToBorder",void 0),m([w()],ge.prototype,"zoomLevel",void 0),m([w()],ge.prototype,"maxZoomLevel",void 0),ge=m([x("image-cropper")],ge);const me=y(R);let ve=class extends me{constructor(){super(...arguments),this.events=new S(this,(()=>window)),this.subreddit={},this.editingImage=!1,this.editingImageType="",this.handleAvatarChange=t=>{const i=t.target;this.imageCropperProps={imageSrc:i.src,selectionHeight:300,selectionWidth:300,fileName:i.file.name,onSave:t=>{this.trackEvent(u()),this.editingImage=!1,this.subreddit=e(this.subreddit,{avatar:t})}},this.requestUpdate(),this.editingImage=!0,this.editingImageType="icon"},this.handleBannerChange=t=>{const i=t.target;this.imageCropperProps={imageSrc:i.src,selectionHeight:60,selectionWidth:500,fileName:i.file.name,onSave:t=>{this.trackEvent(p()),this.editingImage=!1,this.subreddit=e(this.subreddit,{banner:t})}},this.requestUpdate(),this.editingImage=!0,this.editingImageType="banner"},this.imagelistElements=[{getLabel:()=>z`${"Bannière"}`,getButton:()=>this.getButton(this.handleBannerChange,void 0!==this.subreddit.banner,"Bannière"),shouldDisplay:()=>!0,className:"",size:K.Medium},{getLabel:()=>z`<span class="text-12 text-coolgray-550">${this.subreddit.banner?.name||"image de la bannière"}</span>`,getButton:()=>b({appearance:"plain",attributes:{"data-testid":"delete-banner",onclick:()=>{this.subreddit.banner=void 0,this.requestUpdate()},"aria-label":"Supprimer la bannière chargée"},leadingIcon:_({size:L.Small})}),shouldDisplay:()=>void 0!==this.subreddit.banner,className:"border-solid border border-tone-4 rounded-1 overflow-hidden",size:K.Small},{getLabel:()=>z`${"Icône"}`,getButton:()=>this.getButton(this.handleAvatarChange,void 0!==this.subreddit.avatar,"Icône"),shouldDisplay:()=>!0,className:"",size:K.Medium},{getLabel:()=>z`<span class="text-12 text-coolgray-550">${this.subreddit.avatar.name||"image d’avatar"}}</span>`,getButton:()=>b({appearance:"plain",attributes:{"data-testid":"delete-avatar",onclick:()=>{this.subreddit.avatar=void 0,this.requestUpdate()},"aria-label":"Supprimer l’avatar chargé"},leadingIcon:_({size:L.Small})}),shouldDisplay:()=>void 0!==this.subreddit.avatar,className:"border-solid border border-tone-4 rounded-1 overflow-hidden",size:K.Small}],this.renderElementList=e=>z`<label> ${e.shouldDisplay()?Z({hasTransparentBackground:!0,onClick:()=>{},label:e.getLabel(),size:e.size,trailingSlot:e.getButton(),attributes:{className:e.className}}):""} </label>`}async firstUpdated(){await this.updateComplete,this.querySelector("faceplate-pagination-indicator")?.shadowRoot?.querySelectorAll("button.dot").forEach((e=>{e.tabIndex=-1,e.ariaHidden="true"})),this.dispatchEvent(C("refresh_focus",{title:"Personnalise ta communauté",ariaLabel:"Personnalise ta communauté. "+t(2)})),this.events.define(i,(async e=>{e.stopPropagation(),this.dispatchSubredditUpdatedEvent("next")})),this.events.define(a,(async e=>{e.stopPropagation(),this.dispatchSubredditUpdatedEvent("back")}))}dispatchSubredditUpdatedEvent(e){const t=new CustomEvent(n,{bubbles:!0,composed:!0,detail:{subreddit:this.subreddit,direction:e,source:o.Images}});this.dispatchEvent(t)}getButton(e,t,i){return z`<community-image-upload dropzone-classes="border-none" accept="image/x-png,image/jpeg,image/png" @change="${e}" .customContent="${()=>this.renderButton(t?"bordered":"secondary",t?"Changer":"Ajouter",i)}"></community-image-upload>`}renderButton(e,t,i){return z`${b({attributes:{"aria-label":t+" "+i},appearance:e,children:t,leadingIcon:F(),size:f.Small})}`}ImageInputs(){return z` <div class="mb-xs min-w-[55%]"> <ul role="menu" class="pl-0"> ${this.imagelistElements.map((e=>this.renderElementList(e)))} </ul> </div> `}render(){const e=z`<div class="min-w-[55%] xs:w-[768px] h-16 pr-12 py-2.5 rounded-2xl justify-start items-center pb-xl inline-flex"> <div class="grow shrink basis-0 flex-col justify-center items-start gap-[4px] inline-flex"> <div class="self-stretch text-sm font-normal text-tone-2 leading-tight w-[80%]"> ${this.editingImage?(t=this.editingImageType,"banner"===t?"Les bannières doivent mesurer 1 028 px × 128 px":"Les proportions de l’icône doivent être de 1:1"):"Avec un flair visuel, tu attires l’attention de nouveaux membres tout en définissant la culture de ta communauté ! Tu peux mettre à jour ta description à tout moment."} </div> </div> </div>`;var t;return this.editingImage?z` ${e} <div class="w-100 h-16 pr-12 py-2.5 rounded-2xl justify-start items-center pb-xl inline-flex"> <image-cropper class="max-w-[700px] w-[96%]" canvas-classes="w-100 h-[400px]" img-src="${q(this.imageCropperProps?.imageSrc)}" selection-width="${q(this.imageCropperProps?.selectionWidth)}" selection-height="${q(this.imageCropperProps?.selectionHeight)}" adjust-selection-to-border file-name="${q(this.imageCropperProps?.fileName)}" .onCancel="${()=>{this.editingImage=!1}}" .onSave="${this.imageCropperProps?.onSave}"></image-cropper> </div>`:z` ${e} <div class="flex gap-md flex-col-reverse xs:flex-row"> ${this.ImageInputs()} <div class="flex items-center grow"> <community-creation-preview class="w-100 flex justify-center" name="${q(this.subreddit.name)}" description="${q(this.subreddit.description)}" avatar="${this.subreddit.avatar?URL.createObjectURL(this.subreddit.avatar):""}" banner="${this.subreddit.banner?URL.createObjectURL(this.subreddit.banner):""}" show-default-images></community-creation-preview> </div> </div> <div class="mb-0 pt-[42px]"> <slot name="buttons-bar"></slot> </div> `}};ve.styles=[g],m([w()],ve.prototype,"subreddit",void 0),m([w()],ve.prototype,"editingImage",void 0),m([w()],ve.prototype,"editingImageType",void 0),ve=m([x("community-creation-walkthrough-images")],ve);
