import"./mod-log-takedown-preview-client-js-dd6db8b8.js";import"./comment-link-post-client-js-7fc51f68.js";import"./select-controller-b7a961d7.js";import"./community-picker-75beb711.js";import"./article-details-feed-client-js-d6722a9f.js";import"./faceplate-tooltip-c6801851.js";import{t,_ as e,n as i,g as s,u as o,c as a,a_ as n,b as r,s as d,e as l,N as c,aq as h,dH as p,T as m,P as u,ar as b,aO as v}from"./shell-a9dcd804.js";import{s as g,x as A,J as f,I as y,c as k,l as S,aX as R,av as C,aE as w,h as O,b1 as P,aB as j,b0 as $,aC as M,a as I,bv as x,M as U,a7 as E,D as B,bS as z,F as T,aI as L,A as V}from"./icon-d7ad820f.js";import{c as D}from"./content-action-button-8d093e66.js";import{a6 as F,aX as H}from"./age-gate-standalone-client-js-55e13342.js";import{M as N}from"./distinguished-tags-4752ad65.js";import{w as W,n as _}from"./modActions-183d7a2f.js";import{i as q}from"./mod-actions-controller-de880f2a.js";import{H as J}from"./community-highlights-31e269d5.js";import{A as Q}from"./mod-bulk-actions-9bc5f299.js";import{C as G}from"./comment-4f28f421.js";import{P as K}from"./links-30dbf643.js";import{P as X}from"./overflow-menu-actions-ec094350.js";import{M as Y,s as Z,a as tt,b as et,c as it,d as st,e as ot,f as at}from"./mod-verdict-fdcc35ce.js";import"./shreddit-comment-share-button-30370878.js";import"./shreddit-post-share-button-b3d16788.js";import"./all-chats-page-recommendations-client-js-f8d39a9f.js";import{M as nt}from"./mod-actions-menu-207c0447.js";import{l as rt}from"./expandable-section-header-a5b37930.js";import"./user-flair-aefa9eac.js";import"./chat-mobile-xpromo-client-js-342f9966.js";import"./mod-removal-reason-form-client-js-a99448d0.js";import"./faceplate-form-f63ed129.js";import"./filterNullish-9ec33a16.js";import"./faceplate-select-text-input-8c128e32.js";import"./constants-775ffd1d.js";import"./validate-image-9f48337a.js";import"./text-input-1e857ee0.js";import"./faceplate-option-4ed33696.js";import"./header-action-item-chat-client-js-949dafe8.js";import"./tooltip.base-a366add3.js";import"./rpl-popper-cdaac5d5.js";import"./faceplate-progress-433a18f1.js";import"./faceplate-textarea-input-9ac7fafc.js";import"./smart-escalations-provider-client-js-7cc1a06d.js";import"./community-onboarding-completed-modal-client-js-e3c10ae1.js";import"./hui-user-drawer-client-js-9e94c0bf.js";import"./TinyGesture-89d9957c.js";import"./postFlair-9d6c2791.js";import"./click-card-99f1b8ad.js";import"./faceplate-hovercard-25d58131.js";import"./previous-actions-client-js-9a473712.js";import"./with-share-10c7b8d9.js";import"./promote-post-actions-controller-8a499415.js";import"./index-7436fa38.js";import"./profile-creation-1d60123b.js";import"./rpl-coachmark-abe2db02.js";import"./rpl-coachmark-card-c876a6a2.js";import"./app-selector-client-js-197aee07.js";import"./faceplate-bottom-sheet-header-a9166dbb.js";import"./mod-dropdown-closer-8bae422a.js";let dt=class extends g{constructor(){super(...arguments),this.buttonAppearance="secondary",this.buttonSize=o.Small,this.showFullButtons=!1,this.ariaLabel="",this.thingId="",this.smartEscalationsTracking=!1,this.isLargerThanSmallWindow=!0,this._handleModActionClick=t=>{this.dataModAction===N.AddRemovalReason&&t.stopPropagation(),this.dataModAction&&(this.dispatchEvent(a(this.dataModAction)),t.target&&this.noun&&n(t.target,r({source:"moderator",action:"click",noun:this.noun})))},this.mediaWatcher=null,this.handleMediaChange=t=>{this.isLargerThanSmallWindow=t.matches},this.renderWithTooltip=()=>A`<faceplate-tooltip appearance="inverted" position="top"> ${this.renderButton()} <slot name="text"></slot> </faceplate-tooltip>`,this.renderButton=()=>{const t=F()?D:d,e=this.smartEscalationsTracking?A` <ac-track trigger="click" san="moderator|click|remove" data-faceplate-tracking-context="${JSON.stringify({action_info:{source_name:"smart-escalations"},...this.thingId&&W(this.thingId)&&{post:{id:this.thingId}},...this.thingId&&_(this.thingId)&&{comment:{id:this.thingId}}})}"></ac-track>`:"";return A`${t({appearance:this.buttonAppearance,attributes:{onclick:this._handleModActionClick,className:"relative",slot:"trigger"},size:this.buttonSize,children:this.showFullButtons&&this.isLargerThanSmallWindow?A` <span> ${e} <slot name="text"></slot> </span> `:"",leadingIcon:this.showFullButtons&&this.isLargerThanSmallWindow?"":A` <span class="flex justify-center items-center"> ${e} <slot name="icon"></slot> </span> `,screenReaderContent:this.ariaLabel})}`}}connectedCallback(){super.connectedCallback(),this.showFullButtons&&(this.mediaWatcher=window.matchMedia("(min-width: 768px)"),this.mediaWatcher.addEventListener("change",this.handleMediaChange))}disconnectedCallback(){super.disconnectedCallback(),this.mediaWatcher?.removeEventListener("change",this.handleMediaChange)}render(){return this.showFullButtons?this.renderButton():this.renderWithTooltip()}};dt.styles=[t],e([i({type:String,attribute:"data-mod-action"})],dt.prototype,"dataModAction",void 0),e([i({type:String,attribute:"event-noun"})],dt.prototype,"noun",void 0),e([i({type:String,attribute:"button-appearance"})],dt.prototype,"buttonAppearance",void 0),e([i({type:String,attribute:"button-size"})],dt.prototype,"buttonSize",void 0),e([i({type:Boolean,attribute:"show-full-buttons"})],dt.prototype,"showFullButtons",void 0),e([i({type:String,attribute:"aria-label"})],dt.prototype,"ariaLabel",void 0),e([i({type:String,attribute:"thing-id"})],dt.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"smart-escalations-tracking"})],dt.prototype,"smartEscalationsTracking",void 0),e([s()],dt.prototype,"isLargerThanSmallWindow",void 0),dt=e([l("mod-action-button")],dt);let lt=class extends(c(g)){constructor(){super(...arguments),this.feedViewType=h.ModQueueCompactView,this.viewContext=K.CommentsPage,this.itemState=Y.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.isSmartEscalations=!1,this.isContentLevelModsCommsEnabled=!1,this.prefillChatMessageFn=H,this.moderationState=Y.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:i}=t;switch(t.action){case X.approve:case G.approve:case Q.approve:case G.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=Y.APPROVED;break;case X.remove:case X.removeAsSpam:case X.confirmRemoval:case G.remove:case G.removeAsSpam:case G.confirmRemoval:case Q.remove:case Q.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=Y.REMOVED;break;case X.addRemovalReason:case G.addRemovalReason:this.hasRemovalReason=!0;break;case X.updateHighlightedPost:this.isHighlighted=i;break;case X.lock:case G.lock:this.isLocked=i;break;case X.delete:this.isDeleted=i;break;case X.sticky:case G.sticky:this.isStickied=i;break;case X.shareToModChat:this.prefillChatMessageFn(window.location.origin+this.permalink)}}}get itemType(){return this.thingId?q(this.thingId):null}get isPost(){return this.itemType===p.Post}get isCompactView(){return this.feedViewType===h.CompactView}get isOnModqueuePage(){return this.viewContext===K.ModQueue||this.viewContext===K.ModQueueAll}get isApproved(){return this.moderationState===Y.APPROVED}get shouldShowConfirmRemoval(){return Z(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return tt(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===K.ProfileFeed||this.viewContext===K.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case p.Award:return m.AwardOnContentUpdated;case p.Comment:return m.CommentUpdated;case p.Post:return m.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){const t=F()?"bordered":"secondary";return this.isCompactView?t:this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,Y.REMOVED,t)}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&et(this.moderationState)?A` <mod-action-button aria-label="Approuver le contenu" data-mod-action="${N.ApproveContent}" button-appearance="${this.getApproveButtonAppearance()}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${f({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text">Approuver</span> </mod-action-button> `:null}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&it(this.moderationState)?A` <mod-action-button aria-label="Supprimer le contenu" data-mod-action="${N.RemoveContent}" button-appearance="${F()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${k({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text"> Retirer </span> </mod-action-button> `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?A` <mod-action-button aria-label="Confirme le retrait" data-mod-action="${N.ConfirmRemoval}" button-appearance="${F()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}" thing-id="${S(this.thingId)}" ?smart-escalations-tracking="${this.isSmartEscalations}"> <span slot="icon" class="flex justify-center">${k({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text"> Confirme le retrait </span> </mod-action-button> `:null}renderSpamAction(){return st({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?A` <mod-action-button aria-label="Retirer le contenu car spam" data-mod-action="${N.RemoveContentAsSpam}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${R({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text"> Spam </span> </mod-action-button> `:null}renderShareToModChatAction(){return ot({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline&&this.isContentLevelModsCommsEnabled?A` <reddit-chat-anchor slot="mod-share-to-mod-chat"> <a href="https://chat.reddit.com/room/!lKfTYc3TTlSC4-lBD_Namg:reddit.com"> <mod-action-button aria-label="Partager dans la discussion de mod\u00E9ration" button-appearance="plain" data-mod-action="${N.ShareToModChat}"> <span slot="icon" class="flex justify-center"> ${C({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> Partager dans la discussion de mod\u00E9ration </span> </mod-action-button> </a> </reddit-chat-anchor> `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?A` <mod-action-button aria-label="Ouvrir la fen\u00EAtre du flair de publication" data-mod-action="${N.OpenEditPostFlairModal}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${w({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text"> Flair </span> </mod-action-button>`:null}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==p.Award&&at(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?A` <mod-action-button aria-label="Ajouter un motif de retrait" data-mod-action="${N.AddRemovalReason}" button-appearance="${F()?"bordered":"secondary"}" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center">${O({attributes:{"aria-hidden":"true"},size:y.Small})}</span> <span slot="text"> Ajouter un motif de retrait </span> </mod-action-button> ${this.isIconOnly?A`<div class="separator"></div>`:null} `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?A`<shreddit-post-share-button ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" size="${o.Small}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-post-share-button>`:A`<shreddit-comment-share-button slot="comment-share" ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Verrouiller";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.Lock}" event-noun="lock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${P({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Déverrouiller";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.Unlock}" event-noun="unlock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${j({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Épingler";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.Sticky}" event-noun="sticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${$({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Désépingler";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.Unsticky}" event-noun="unsticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${M({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!J.has(this.viewContext)||this.isHighlighted)return null;const t="Ajouter aux temps forts";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.UpdateHighlightedPost}" event-noun="highlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${$({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&J.has(this.viewContext)&&this.isHighlighted))return null;const t="Retirer des temps forts";return A` <mod-action-button aria-label="${t}" data-mod-action="${N.RemoveHighlightedPost}" event-noun="unhighlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${M({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}render(){return A` ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()} ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderShareToModChatAction()} ${this.renderSpamAction()} ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()} ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()} ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()} `}};lt.styles=[t,I`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],e([i({type:String,attribute:"thing-id"})],lt.prototype,"thingId",void 0),e([i({type:String,attribute:"feed-view-type"})],lt.prototype,"feedViewType",void 0),e([i({type:String,attribute:"view-context"})],lt.prototype,"viewContext",void 0),e([i({type:String,attribute:"item-state"})],lt.prototype,"itemState",void 0),e([i({type:Boolean,attribute:"has-reports"})],lt.prototype,"hasReports",void 0),e([i({type:Boolean,attribute:"mod-mode"})],lt.prototype,"isModMode",void 0),e([i({type:Boolean,attribute:"removed"})],lt.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"deleted"})],lt.prototype,"isDeleted",void 0),e([i({type:Boolean,attribute:"locked"})],lt.prototype,"isLocked",void 0),e([i({type:Boolean,attribute:"stickied"})],lt.prototype,"isStickied",void 0),e([i({type:Boolean,attribute:"highlighted"})],lt.prototype,"isHighlighted",void 0),e([i({type:Boolean,attribute:"current-user-author"})],lt.prototype,"isCurrentUserAuthor",void 0),e([i({type:Boolean,attribute:"has-parent"})],lt.prototype,"hasParent",void 0),e([i({type:Boolean,attribute:"icon-only"})],lt.prototype,"isIconOnly",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],lt.prototype,"hasRemovalReason",void 0),e([i({type:String,attribute:"permalink"})],lt.prototype,"permalink",void 0),e([i({type:Boolean,attribute:"is-desktop-viewport"})],lt.prototype,"isDesktopViewport",void 0),e([i({type:Boolean,attribute:"is-spam-filtered-post"})],lt.prototype,"isSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],lt.prototype,"isProfilePost",void 0),e([i({type:Boolean,attribute:"is-promoted-post"})],lt.prototype,"isPromotedPost",void 0),e([i({type:Boolean,attribute:"has-flair-permissions"})],lt.prototype,"hasFlairPermissions",void 0),e([i({type:Boolean,attribute:"highlights-enabled"})],lt.prototype,"areHighlightsEnabled",void 0),e([i({type:Boolean,attribute:"hide-inline-actions"})],lt.prototype,"hideInlineActions",void 0),e([i({type:Boolean,attribute:"smart-escalations"})],lt.prototype,"isSmartEscalations",void 0),e([i({type:Boolean,attribute:"is-content-level-mods-comms-enabled"})],lt.prototype,"isContentLevelModsCommsEnabled",void 0),e([i({attribute:!1})],lt.prototype,"prefillChatMessageFn",void 0),e([s()],lt.prototype,"moderationState",void 0),lt=e([l("shreddit-mod-inline-actions")],lt);let ct=class extends nt{constructor(){super(...arguments),this.hasParent=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.lock:this.isLocked=Boolean(i);break;case G.sticky:this.isStickied=Boolean(i);break;case G.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case G.distinguishAsAdmin:this.distinguishedAs=i?v.Admin:void 0;break;case G.approve:case G.approveOptimistic:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=Y.APPROVED,this.hasReports=!1;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=Y.REMOVED,this.hasReports=!1;break;case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=Y.APPROVED)}}}get isStickyable(){return super.isStickyable&&this.isCurrentUserAuthor&&!this.hasParent}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate)}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Épingler le commentaire"),this.renderUnstickyAction("Désépingler le commentaire"),this.renderLockAction("Verrouiller le commentaire"),this.renderUnlockAction("Déverrouiller le commentaire"),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"has-parent"})],ct.prototype,"hasParent",void 0),ct=e([l("shreddit-comment-mod-actions-menu")],ct);let ht=class extends nt{constructor(){super(...arguments),this.isNsfw=!1,this.isSpoiler=!1,this.isContentLevelModsCommsEnabled=!1,this.pubsub=new u(this),this._handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case X.lock:this.isLocked=Boolean(i);break;case X.sticky:this.isStickied=Boolean(i);break;case X.updateHighlightedPost:this.isHighlighted=Boolean(i);break;case X.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case X.approveOptimistic:case X.approve:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=Y.APPROVED,this.hasReports=!1,this.requestUpdate();break;case X.remove:case X.removeAsSpam:case X.confirmRemoval:case X.removeOptimistic:case X.removeAsSpamOptimistic:case X.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=Y.REMOVED,this.hasReports=!1;break;case X.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case X.markAsNsfw:this.isNsfw=Boolean(i);break;case X.markAsSpoiler:this.isSpoiler=Boolean(i);break;case X.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=Y.APPROVED)}}}get isStickyable(){return super.isStickyable}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.PostUpdated,this._handlePostUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.PostUpdated,this._handlePostUpdate)}renderMarkAsNsfwAction(){return this.isDeleted||this.isNsfw?null:rt({leadingIcon:x(),label:"Ajouter une étiquette 18+",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkNsfw)})}renderUnmarkAsNsfwAction(){return this.isDeleted||!this.isNsfw?null:rt({leadingIcon:U(),label:"Retirer l’étiquette 18+",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkNsfw)})}renderMarkAsSpoilerAction(){return this.isDeleted||this.isSpoiler?null:rt({leadingIcon:E(),label:"Ajouter une étiquette spoiler",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkSpoiler)})}renderUnmarkAsSpoilerAction(){return this.isDeleted||!this.isSpoiler?null:rt({leadingIcon:B(),label:"Retirer l’étiquette spoiler",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkSpoiler)})}renderAdjustCrowdControlAction(){return this.isPromotedPost?null:rt({leadingIcon:z(),label:"Ajuster le contrôle des foules",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleAdjustCrowdControl)})}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.renderShareToModChatAction(this.isContentLevelModsCommsEnabled),this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Épingler la publication"),this.renderUnstickyAction("Désépingler la publication"),this.renderAddToHighlightsAction(),this.renderRemoveFromHighlightsAction(),this.renderLockAction("Verrouiller les commentaires"),this.renderUnlockAction("Déverrouiller les commentaires"),this.renderEditPostFlairAction("Modifier le flair de la publication"),this.renderMarkAsNsfwAction(),this.renderUnmarkAsNsfwAction(),this.renderMarkAsSpoilerAction(),this.renderUnmarkAsSpoilerAction(),this.renderAdjustCrowdControlAction(),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"nsfw"})],ht.prototype,"isNsfw",void 0),e([i({type:Boolean,attribute:"spoiler"})],ht.prototype,"isSpoiler",void 0),e([i({type:Boolean,attribute:"is-content-level-mods-comms-enabled"})],ht.prototype,"isContentLevelModsCommsEnabled",void 0),ht=e([l("shreddit-post-mod-actions-menu")],ht);const pt=c(g);let mt=class extends pt{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case G.approve:case G.approveOptimistic:this.removed=!1;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case X.approve:case X.approveOptimistic:this.removed=!1;break;case X.remove:case X.removeAsSpam:case X.confirmRemoval:case X.removeOptimistic:case X.removeAsSpamOptimistic:case X.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case Q.approve:this.removed=!1;break;case Q.remove:case Q.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(m.PostUpdated,this.onPostUpdateAction),this.subscribe(m.CommentUpdated,this.onCommentUpdateAction),this.subscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(m.PostUpdated,this.onPostUpdateAction),this.unsubscribe(m.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return A` <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full"> <div class="relative"> <slot name="verdict-indicator-avatar"></slot> <div aria-hidden="true" class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}"> ${this.removed?L({size:y.ExtraSmall}):T({size:y.ExtraSmall})} </div> </div> ${this.shouldShowLabel?A`<slot name="verdict-indicator-label"></slot>`:""} </span> `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};mt.styles=[t],e([s()],mt.prototype,"parentOfModVerdictSlotElementWidth",void 0),e([s()],mt.prototype,"parentOfModVerdictSlotElement",void 0),e([i({type:Boolean,reflect:!0})],mt.prototype,"removed",void 0),e([i({type:String,attribute:"thing-id"})],mt.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"ignore-parent-width"})],mt.prototype,"shouldIgnoreParentWidth",void 0),mt=e([l("mod-verdict-indicator-component")],mt);let ut=class extends g{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.approve:case G.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case G.remove:case G.removeAsSpam:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case X.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case X.approve:case X.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case X.remove:case X.removeAsSpam:case X.removeOptimistic:case X.removeAsSpamOptimistic:case X.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?Y.REMOVED:Y.UNMODERATED;return at(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(m.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(m.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?V:A` <mod-action-button aria-label="Ajouter un motif de retrait" data-mod-action="${N.AddRemovalReason}" button-appearance="secondary" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center"> ${O({attributes:{"aria-hidden":"true"},size:y.Small})} </span> <span slot="text" class="flex"> ${this.iconOnly?O({attributes:{"aria-hidden":"true"},size:y.Small}):"Ajouter un motif de retrait"} </span> </mod-action-button> `}};ut.styles=[t],e([i({type:String,attribute:"thing-id"})],ut.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],ut.prototype,"hasRemovalReason",void 0),e([s()],ut.prototype,"iconOnly",void 0),e([i({type:Boolean,attribute:"is-removed"})],ut.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"is-content-spam-filtered-post"})],ut.prototype,"isContentSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],ut.prototype,"isProfilePost",void 0),ut=e([l("responsive-add-removal-reason-cta")],ut);
