import{K as e,O as t,M as i,a as s,N as o,c as n,G as a,T as r,t as d,_ as l,n as c,g as h,e as u,es as p,fj as m,eU as b,ah as v,s as g,u as f,fk as y,p as k,P as S,am as I,al as C}from"./shell-a9dcd804.js";import{n as x,i as E,a as w,u as T,b as U,c as N,d as R,N as M,e as O,f as B,g as L,h as j,j as A,k as D,m as H,l as P,o as $,p as F}from"./announcement-overflow-menu-feed845f.js";import{A as q,x as V,s as z,v as _,I as J,ac as G,ab as K,a as Q}from"./icon-d7ad820f.js";import{p as Y,j as W,br as X}from"./age-gate-standalone-client-js-55e13342.js";import{l as Z}from"./expandable-section-header-a5b37930.js";import"./select-controller-b7a961d7.js";import"./community-picker-75beb711.js";import"./rpl-menu-8a29258f.js";import"./rpl-menu-item-72acd41d.js";import"./rpl-dropdown-be4d4201.js";import"./all-chats-page-recommendations-client-js-f8d39a9f.js";import"./shreddit-spoiler-608eaa70.js";import"./shreddit-share-list-item-b3c0deef.js";import"./mod-log-takedown-preview-client-js-dd6db8b8.js";import"./shop-gallery-data-fetcher-client-js-cd71f78d.js";import"./user-flair-aefa9eac.js";import"./rpl-popper-cdaac5d5.js";import"./hovercard.base-c7f2f88b.js";import"./with-share-10c7b8d9.js";import"./promote-post-actions-controller-8a499415.js";import"./content-action-button-8d093e66.js";import"./index-7436fa38.js";import"./header-action-item-chat-client-js-949dafe8.js";import"./tooltip.base-a366add3.js";import"./profile-creation-1d60123b.js";import"./rpl-coachmark-abe2db02.js";import"./rpl-coachmark-card-c876a6a2.js";import"./modActions-183d7a2f.js";import"./index-e9ae10a6.js";const ee=new Set([i.CommentReply,i.PostReply,i.PrivateMessage,i.UsernameMention]);function te(e,t,i){window.Sentry?.captureMessage?.(`Unexpected inbox mark as read error id: ${t}, type: ${i}, err: ${JSON.stringify(e)}`)}let ie=class extends(s(o(z))){constructor(){super(...arguments),this.isViewed=!1,this.isDeletedPost=!1,this.isRemovedPost=!1,this.notificationId="",this.messageType="",this.hasLink="",this.isM2InboxExperiment=!1,this.isHidden=!1,this.observer=null,this.handleVisibilityChange=([{isIntersecting:e}])=>{e&&!this.isViewed&&(this.trackEvent(x(this.getTrackEventProperties())),this.isViewed=!0,this.observer?.disconnect())},this.hideIfIsSelf=e=>{e===this.notificationId&&this.hide()},this.hide=()=>this.isHidden=!0,this.onClick=async e=>{(!this.hasLink||this.isDeletedPost||this.isRemovedPost||E(e))&&e.preventDefault();return!!e.target?.closest("notification-context-menu")||this.trackEvent(w({...this.getTrackEventProperties(),clickTarget:"notification"})),this.isDeletedPost?this.showAlert({message:"Désolé, cette publication a été supprimée"}):this.isRemovedPost&&this.showAlert({message:"Ce contenu n’est plus disponible"}),await this.fireReadEvent(),!1},this.getUnreadChildElement=()=>this.isM2InboxExperiment?this.querySelector("rpl-inbox-row[selected]"):this.querySelector(`.${T}`),this.fireReadEvent=async()=>{this.getUnreadChildElement()&&(this.removeUnreadState(),await async function(i,s){if(i)try{let o;ee.has(s)?(o=await e({operation:t.MarkPrivateMessageAsRead,variables:{input:{messageId:i}}}),te(o.data.markPrivateMessageAsRead?.errors,i,s)):(o=await e({operation:t.MarkNotificationRead,variables:{input:{notificationId:i}}}),te(o.data.readNotificationLoggedIn?.errors,i,s))}catch(e){}}(this.notificationId,this.messageType))},this.removeUnreadState=()=>{const e=this.getUnreadChildElement();e&&(this.isM2InboxExperiment?e.removeAttribute("selected"):e.classList.remove(T))},this.showAlert=({message:e})=>this.dispatchEvent(n("faceplate-alert",{level:a.warning,message:e})),this.getTrackEventProperties=()=>({notificationType:this.messageType,notificationId:this.notificationId,isViewed:this.isViewed,isClicked:!!this.getUnreadChildElement()})}connectedCallback(){super.connectedCallback(),this.observer=new IntersectionObserver(this.handleVisibilityChange,{root:document.querySelector(`[data-id="${U}"]`),threshold:.25}),this.observer.observe(this)}disconnectedCallback(){super.disconnectedCallback(),this.observer?.disconnect()}firstUpdated(){this.trackEvent(N(this.getTrackEventProperties())),this.querySelector("a")?.addEventListener("click",this.onClick),this.subscribe(r.NotificationInboxNotificationHideEvent,this.hideIfIsSelf),this.subscribe(r.InboxReadAllEvent,this.removeUnreadState)}render(){return this.isHidden?q:V`<slot></slot>`}};ie.styles=[d],l([c({type:Boolean,attribute:"is-viewed",reflect:!0})],ie.prototype,"isViewed",void 0),l([c({type:Boolean,attribute:"is-deleted-post"})],ie.prototype,"isDeletedPost",void 0),l([c({type:Boolean,attribute:"is-removed-post"})],ie.prototype,"isRemovedPost",void 0),l([c({type:String,attribute:"notification-id"})],ie.prototype,"notificationId",void 0),l([c({type:String,attribute:"message-type"})],ie.prototype,"messageType",void 0),l([c({type:Boolean,attribute:"has-link"})],ie.prototype,"hasLink",void 0),l([c({type:Boolean,attribute:"is-m2-inbox-experiment"})],ie.prototype,"isM2InboxExperiment",void 0),l([h()],ie.prototype,"isHidden",void 0),ie=l([u("notification-item")],ie);const se="inbox_banner_seen_count_store";function oe({currentStorageData:e,userId:t,inboxBannerName:i}){return e?.[t]?.find((e=>e.inboxBannerName===i))?.seenCount??0}function ne({userId:e,inboxBannerName:t,seenCount:i,currentStorageData:s={}}){const o={...s||{},[e]:[{inboxBannerName:t,seenCount:i}]};W(se,o)}let ae=class extends z{constructor(){super(...arguments),this.isHidden=!1,this.colorMap={},this.hide=e=>{e.preventDefault(),this.isHidden=!0,this.userId&&this.name&&this.maxViews&&function({userId:e,inboxBannerName:t,seenCount:i}){ne({userId:e,currentStorageData:Y(se),inboxBannerName:t,seenCount:i})}({userId:this.userId,inboxBannerName:this.name,seenCount:this.maxViews})},this.onClick=e=>{E(e)&&e.preventDefault()}}firstUpdated(){if(this.querySelectorAll(`[data-id="${R}"`).forEach((e=>e.addEventListener("click",this.hide))),this.querySelectorAll("a").forEach((e=>e.addEventListener("click",this.onClick))),Object.entries(this.colorMap).forEach((([e,t])=>{this.style.setProperty(`--${e}`,t)})),this.userId&&this.name){const e=function({userId:e,inboxBannerName:t}){return oe({userId:e,inboxBannerName:t,currentStorageData:Y(se)})}({userId:this.userId,inboxBannerName:this.name});void 0!==this.maxViews&&e>=this.maxViews?this.isHidden=!0:function({userId:e,inboxBannerName:t}){const i=Y(se);ne({userId:e,currentStorageData:i,inboxBannerName:t,seenCount:oe({userId:e,inboxBannerName:t,currentStorageData:i})+1})}({userId:this.userId,inboxBannerName:this.name})}}render(){return this.isHidden?q:V`<slot></slot>`}};ae.styles=[d],l([h()],ae.prototype,"isHidden",void 0),l([c({type:Object})],ae.prototype,"colorMap",void 0),l([c({type:String,attribute:"user-id"})],ae.prototype,"userId",void 0),l([c({type:String})],ae.prototype,"name",void 0),l([c({type:Number,attribute:"max-views"})],ae.prototype,"maxViews",void 0),ae=l([u("notification-inbox-banner")],ae);const re=({notificationLevel:e,isEnablingUpdates:t})=>{if(t)switch(e){case p.Off:case null:return p.Low;case p.Low:case p.Frequent:default:return p.Frequent}else switch(e){case p.Frequent:return p.Low;case p.Low:default:return p.Off}};let de=class extends(s(o(z))){constructor(){super(...arguments),this.messageType="",this.notificationLevel=null,this.notificationId="",this.userId="",this.userName="",this.postId="",this.commentId="",this.subredditId="",this.subredditName="",this.isHideEligible=!1,this.isToggleUpdateFromSubredditEligible=!1,this.isToggleNotificationUpdateEligible=!1,this.isToggleLowUpdateFromSubredditEligible=!1,this.shouldDecoupleInboxSettings=!1,this.isMobile=!1,this.isM2InboxExperiment=!1,this.initialNotificationLevel=null,this.isNotificationLevelOff=()=>!this.notificationLevel||this.notificationLevel===p.Off,this.getIsRead=()=>this.isM2InboxExperiment?!this.querySelector("rpl-inbox-row[selected]"):!this.closest("notification-item")?.querySelector(`.${T}`),this.shouldUseRpl=()=>this.isM2InboxExperiment&&!this.isMobile,this.shouldRenderHide=()=>this.isHideEligible,this.shouldRenderDisableUpdates=()=>this.isToggleNotificationUpdateEligible&&(this.postId||this.commentId),this.shouldRenderDisableUpdatesFromSubreddit=()=>this.subredditId&&this.isToggleUpdateFromSubredditEligible,this.shouldRenderBlockThisUser=()=>this.userId&&this.userName&&this.messageType&&[i.ChatAcceptInvite,i.ChatMessage,i.ChatMessageReaction,i.ChatRequest,i.AwardReceived].includes(this.messageType),this.shouldRenderSeeLessFromSubreddit=()=>this.subredditId&&this.isToggleLowUpdateFromSubredditEligible,this.shouldRenderManageThisNotification=()=>this.shouldDecoupleInboxSettings&&this.messageType,this.hideNotification=async()=>{try{const i=await e({operation:t.DeleteInboxNotifications,variables:{input:{notificationIds:[this.notificationId]}}});if(i.data.deleteInboxNotifications?.ok)return this.showAlert({level:a.notice,message:"Succès ! Vous ne verrez plus de mises à jour à ce sujet à l'avenir"}),void this.publish(r.NotificationInboxNotificationHideEvent,this.notificationId)}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesFromSubreddit=async i=>{try{this.notificationLevel=i?this.initialNotificationLevel:p.Off;const s=await e({operation:t.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isUpdateFromSubredditEnabled:i,isSubredditUpdatesInterestingPostEnabled:!this.isNotificationLevelOff()}}});if(s.data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({actionInfoType:M.HideSubreddit,isDo:!i,doConfig:{message:"C’est fait ! Tu ne verras plus les mises à jour de ce subreddit.",undoOnClick:()=>this.changeUpdatesFromSubreddit(!0)},undoConfig:{message:"C’est fait ! Le masquage des mises à jour de ce subreddit a été annulé."}})}catch(e){window.Sentry?.captureMessage(e)}this.notificationLevel=i?p.Off:this.initialNotificationLevel,this.showAlert({})},this.changeSeeLessFromSubreddit=async i=>{this.notificationLevel=re({isEnablingUpdates:i,notificationLevel:this.notificationLevel});try{const s=await e({operation:t.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isUpdateFromSubredditEnabled:!this.isNotificationLevelOff(),isSubredditUpdatesInterestingPostEnabled:i}}});if(s.data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({actionInfoType:M.DisableNotificationType,isDo:!i,doConfig:{message:"C’est fait ! Tu en verras moins sur ce subreddit à l’avenir.",undoOnClick:()=>this.changeSeeLessFromSubreddit(!0)},undoConfig:{message:"C’est fait ! La demande d’en voir moins sur ce subreddit a été annulée."}})}catch(e){window.Sentry?.captureMessage(e)}this.notificationLevel=re({isEnablingUpdates:!i,notificationLevel:this.notificationLevel}),this.showAlert({})},this.changeUpdatesOnThisPost=async i=>{try{const s=await e({operation:t.UpdatePostSendRepliesState,variables:{input:{postId:this.postId,sendRepliesState:i?m.Send:m.DoNotSend}}});if(s.data.updatePostSendRepliesState?.ok)return void this.handleAlerts({actionInfoType:M.HideUpdates,isDo:!i,doConfig:{message:"C’est fait ! Tu ne verras plus les mises à jour de cette publication.",undoOnClick:()=>this.changeUpdatesOnThisPost(!0)},undoConfig:{message:"C’est fait ! Le masquage des mises à jour a été annulé."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesOnThisComment=async i=>{try{const s=await e({operation:t.UpdateCommentSendRepliesState,variables:{input:{commentId:this.commentId,sendRepliesState:i?m.Send:m.DoNotSend}}});if(s.data.updateCommentSendRepliesState?.ok)return void this.handleAlerts({actionInfoType:M.HideUpdates,isDo:!i,doConfig:{message:"C’est fait ! Tu ne verra plus de mises à jour de ce commentaire.",undoOnClick:()=>this.changeUpdatesOnThisComment(!0)},undoConfig:{message:"C’est fait ! Le masquage des mises à jour a été annulé."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUserBlockStatus=async i=>{try{const s=await e({operation:t.UpdateRedditorBlockState,variables:{input:{redditorId:this.userId,blockState:i}}});if(s.data.updateRedditorBlockState?.ok)return void this.handleAlerts({actionInfoType:M.BlockUser,isDo:i===b.Blocked,doConfig:{message:`u/${this.userName} est désormais bloqué·e.`,undoOnClick:()=>this.changeUserBlockStatus(b.None)},undoConfig:{message:`u/${this.userName} est désormais débloqué·e.`}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.handleAlerts=({isDo:e,actionInfoType:t,doConfig:i,undoConfig:s})=>{e?this.showAlert({level:a.notice,message:i.message,undoOnClick:i.undoOnClick,actionInfoType:t}):this.showAlert({level:a.notice,message:s.message})},this.showAlert=({level:e=a.error,message:t="Une erreur est survenue",undoOnClick:i,actionInfoType:s})=>this.dispatchEvent(n("faceplate-alert",{level:e,message:t,cause:e===a.error?v.UncaughtError:void 0,namedContent:i&&s?{action:g({children:"Annuler",attributes:{onclick:()=>{i(),this.trackEvent(D(this.getTrackClickOptionProperties(s)))}}})}:void 0})),this.renderHideThisNotification=()=>this.renderMenuElement({label:"Masquer",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.HideNotification))),this.hideNotification()),dataTestId:"hide-this-notification",hasRedirect:!1}),this.renderDisableUpdates=()=>this.renderMenuElement({label:"Ne pas recevoir les mises à jour à ce sujet",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.HideUpdates))),this.postId?this.changeUpdatesOnThisPost(!1):this.changeUpdatesOnThisComment(!1)),dataTestId:"block-updates-from-post-or-comment",hasRedirect:!1}),this.renderDisableUpdatesFromSubreddit=()=>this.renderMenuElement({label:this.subredditName?`Désactiver les notifications de r/${this.subredditName}`:"Désactiver les mises à jour de cette communauté",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.HideSubreddit))),this.changeUpdatesFromSubreddit(!1)),dataTestId:"block-updates-from-subreddit",hasRedirect:!1}),this.renderBlockThisUser=()=>this.renderMenuElement({label:"Bloquer cet utilisateur ",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.BlockUser))),this.changeUserBlockStatus(b.Blocked)),dataTestId:"block-user",hasRedirect:!1}),this.renderSeeLessFromSubreddit=()=>this.renderMenuElement({label:"Voir moins de publications de cette communauté",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.DisableNotificationType))),this.changeSeeLessFromSubreddit(!1)),dataTestId:"see-less",hasRedirect:!1}),this.renderManageThisNotification=()=>this.renderMenuElement({label:"Gérer cette notification",onClick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.ManageNotification))),this.redirect(`/settings/notifications?open_modal=${this.messageType}`),Promise.resolve()),dataTestId:"manage-notification",hasRedirect:!0}),this.renderOverflowHorizontalBtn=()=>V` <faceplate-tracker source="${B}" action="click" noun="${L}" data-faceplate-tracking-context="${JSON.stringify(j(this.getTrackEventProperties()))}"> ${g({appearance:"plain",attributes:{type:"button",slot:"menu","aria-label":"Ouvrir les actions de notification"},leadingIcon:_({size:J.Small}),size:f.Small})} </faceplate-tracker> `,this.renderRemoveBtn=()=>this.shouldUseRpl()&&this.isHideEligible?g({appearance:"plain",leadingIcon:G({size:J.Small}),size:f.Small,attributes:{"data-testid":"delete-notification",onclick:()=>(this.trackEvent(O(this.getTrackClickOptionProperties(M.HideNotification))),this.hideNotification()),slot:"hover-actions"}}):q,this.redirect=e=>{window.location.href=e},this.renderMenuElement=({label:e,onClick:t,dataTestId:i,hasRedirect:s})=>this.shouldUseRpl()?V` <rpl-menu-item size="small" data-testid="${i}" @click="${t}"> ${e} </rpl-menu-item> `:Z({onClick:t,label:e,trailingSlot:s?K():void 0,attributes:{role:"menuitem","data-testid":i}}),this.onOpenMenu=()=>this.trackEvent(A(this.getTrackEventProperties())),this.getTrackClickOptionProperties=e=>({...this.getTrackEventProperties(),action_info_type:e}),this.getTrackEventProperties=()=>({notificationId:this.notificationId,notificationType:this.messageType,isViewed:!0,isClicked:this.getIsRead()})}render(){const e=[this.shouldRenderHide()?this.renderHideThisNotification():null,this.shouldRenderSeeLessFromSubreddit()?this.renderSeeLessFromSubreddit():null,this.shouldRenderDisableUpdates()?this.renderDisableUpdates():null,this.shouldRenderBlockThisUser()?this.renderBlockThisUser():null,this.shouldRenderDisableUpdatesFromSubreddit()?this.renderDisableUpdatesFromSubreddit():null,this.shouldRenderManageThisNotification()?this.renderManageThisNotification():null].filter(Boolean);return 0===e.length?q:V` <div class="flex gap-1"> ${this.renderRemoveBtn()} ${this.shouldUseRpl()?V` <rpl-dropdown placement="bottom-end"> ${this.renderOverflowHorizontalBtn()} <rpl-menu slot="content"> ${e} </rpl-menu> </rpl-dropdown> `:V` <faceplate-dropdown-menu position="bottom-end"> ${this.renderOverflowHorizontalBtn()} <faceplate-menu slot="menu" class="block bg-neutral-background"> ${e} </faceplate-menu> </faceplate-dropdown-menu>`} </div> `}};de.styles=[d],l([c({type:String,attribute:"message-type"})],de.prototype,"messageType",void 0),l([c({type:String,attribute:"notification-level",reflect:!0})],de.prototype,"notificationLevel",void 0),l([c({type:String,attribute:"notification-id"})],de.prototype,"notificationId",void 0),l([c({type:String,attribute:"user-id"})],de.prototype,"userId",void 0),l([c({type:String,attribute:"user-name"})],de.prototype,"userName",void 0),l([c({type:String,attribute:"post-id"})],de.prototype,"postId",void 0),l([c({type:String,attribute:"comment-id"})],de.prototype,"commentId",void 0),l([c({type:String,attribute:"subreddit-id"})],de.prototype,"subredditId",void 0),l([c({type:String,attribute:"subreddit-name"})],de.prototype,"subredditName",void 0),l([c({type:Boolean,attribute:"is-hide-eligible"})],de.prototype,"isHideEligible",void 0),l([c({type:Boolean,attribute:"is-toggle-update-from-subreddit-eligible"})],de.prototype,"isToggleUpdateFromSubredditEligible",void 0),l([c({type:Boolean,attribute:"is-toggle-notification-update-eligible"})],de.prototype,"isToggleNotificationUpdateEligible",void 0),l([c({type:Boolean,attribute:"is-toggle-low-update-from-subreddit-eligible"})],de.prototype,"isToggleLowUpdateFromSubredditEligible",void 0),l([c({type:Boolean,attribute:"should-decouple-inbox-settings"})],de.prototype,"shouldDecoupleInboxSettings",void 0),l([c({type:Boolean,attribute:"is-mobile"})],de.prototype,"isMobile",void 0),l([c({type:Boolean,attribute:"is-m2-inbox-experiment"})],de.prototype,"isM2InboxExperiment",void 0),de=l([u("notification-context-menu")],de);let le=class extends y{constructor(){super(...arguments),this.trackExitEvent=()=>{this.trackEvent()}}get miniInboxTooltip(){return document.querySelector(`#${H}`)}connectedCallback(){super.connectedCallback(),this.source=B,this.action="exit",this.noun="mini_inbox",this.miniInboxTooltip?.addEventListener(this.closeEventName,this.trackExitEvent)}disconnectedCallback(){super.disconnectedCallback(),this.miniInboxTooltip?.removeEventListener(this.closeEventName,this.trackExitEvent)}get closeEventName(){return`${this.miniInboxTooltip?.tagName.toLowerCase()}:close`}};le=l([u("notification-inbox-exit-tracker")],le);let ce=class extends(s(z)){constructor(){super(...arguments),this.fireReadAll=async()=>{try{this.trackEvent(P({badgeCount:this.getUnreadCount()})),k(r.InboxReadAllEvent),k(r.InboxCountChanged,0);const i=await e({operation:t.MarkPrivateMessageAsRead,variables:{input:{}}});i.data.markPrivateMessageAsRead?.ok||this.dispatchErrorMessage()}catch(e){this.dispatchErrorMessage()}},this.getUnreadCount=()=>document.querySelector(`[data-id="${$}"]`)?.getCount()??0,this.dispatchErrorMessage=()=>{this.dispatchEvent(n("faceplate-alert",{level:a.error,cause:"uncategorized",message:"Une erreur est survenue au moment de marquer toutes les notifications comme lues"}))}}firstUpdated(){this.querySelector("*")?.addEventListener("click",this.fireReadAll)}render(){return V` <slot></slot> `}};ce=l([u("mark-all-messages-read")],ce);let he=class extends z{constructor(){super(...arguments),this.initialMessagesCount=0}async firstUpdated(){k(r.InboxCountChanged,this.initialMessagesCount),this.initialMessagesCount?navigator.setAppBadge?.(this.initialMessagesCount):navigator.clearAppBadge?.(),await e({operation:t.UpdateInboxActivitySeenState,variables:{input:{lastSentAt:this.lastSentAt?this.lastSentAt:(new Date).toISOString()}}})}render(){return q}};l([c({type:Number,attribute:"initial-messages-count"})],he.prototype,"initialMessagesCount",void 0),l([c({type:String,attribute:"last-sent-at"})],he.prototype,"lastSentAt",void 0),he=l([u("mark-all-notifications-seen")],he);let ue=class extends(s(z)){constructor(){super(...arguments),this.announcementId="",this.isHidden=!1,this.observer=null,this.pubsub=new S(this),this.onClick=e=>{E(e)?e.preventDefault():this.removeUnreadState()},this.onHide=e=>{e===this.announcementId&&(this.isHidden=!0)},this.handleVisibilityChange=([{isIntersecting:e}])=>{if(e){const{title:e="",body:t="",viewedAt:i=""}=this.notificationTelemetryData??{};if(i)return void this.observer?.disconnect();this.trackEvent(N({notificationType:F,notificationId:this.announcementId,isViewed:!0,isClicked:!this.unreadChildElement,title:e,body:t})),this.observer?.disconnect()}},this.removeUnreadState=()=>this.unreadChildElement?.classList.remove(T)}connectedCallback(){super.connectedCallback(),this.addEventListener("click",this.onClick),this.pubsub.subscribe(r.NotificationInboxNotificationHideEvent,this.onHide),this.pubsub.subscribe(r.InboxReadAllEvent,this.removeUnreadState),this.observer=new IntersectionObserver(this.handleVisibilityChange,{root:document.querySelector(`[data-id="${U}"]`),threshold:.25}),this.observer.observe(this)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("click",this.onClick),this.pubsub.unsubscribe(r.NotificationInboxNotificationHideEvent,this.onHide),this.pubsub.unsubscribe(r.InboxReadAllEvent,this.removeUnreadState),this.observer?.disconnect()}get unreadChildElement(){return this.querySelector(`.${T}`)}render(){return this.isHidden?q:V`<slot></slot>`}};ue.styles=[d],l([c({type:String,attribute:"announcement-id"})],ue.prototype,"announcementId",void 0),l([c({type:Object,attribute:"notification-telemetry-data"})],ue.prototype,"notificationTelemetryData",void 0),l([h()],ue.prototype,"isHidden",void 0),ue=l([u("notification-announcement")],ue);class pe extends I{constructor(){super(...arguments),this.elevated=!1}render(){return V` <slot></slot> `}}l([c({type:Boolean})],pe.prototype,"elevated",void 0);var me=Q`${C}:host{--rpl-card-border-radius:var(--rem16);display:flex;flex-direction:column;background-color:var(--color-neutral-background-container);border-radius:var(--rpl-card-border-radius)}:host([elevated]){background-color:var(--color-neutral-background);box-shadow:var(--0,0) var(--1,1px) var(--2,2px) var(--0,0) var(--color-elevation-xsmall)}`;let be=class extends pe{};be.styles=me,be=l([u("rpl-card")],be);class ve extends I{constructor(){super(...arguments),this.disabled=!1,this.hoverable=!1,this.selected=!1,this.forceTouchOnly=!1,this.role="button",this.inaccessibleHref="",this.handleClick=e=>{if(this.disabled)return void e.preventDefault();const t=e.target;t.closest("a, button")||t.closest('[slot="trailing"]')||t.closest('[slot="hover-actions"]')||t.closest("#hover-menu")||this.inaccessibleHref&&this.navigateTo(this.inaccessibleHref)}}connectedCallback(){super.connectedCallback(),(ve.isTouchOnly||this.forceTouchOnly)&&this.setAttribute("rpl-touch-only",""),this.addEventListener("click",this.handleClick)}navigateTo(e){window.location.assign(e)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("click",this.handleClick)}willUpdate(){this.setAttribute("aria-disabled",this.disabled?"true":"false"),this.setAttribute("role",this.role)}render(){return V` <div class="leading"><slot name="leading"></slot></div> <div class="content"><slot></slot></div> <div class="trailing"><slot name="trailing"></slot></div> <div id="hover-menu"> <rpl-card elevated> <slot name="hover-actions"></slot> </rpl-card> </div> `}}ve.isTouchOnly=X(),l([c({type:Boolean,reflect:!0})],ve.prototype,"disabled",void 0),l([c({type:Boolean,reflect:!0})],ve.prototype,"hoverable",void 0),l([c({type:Boolean,reflect:!0})],ve.prototype,"selected",void 0),l([c({type:Boolean,reflect:!0,attribute:"force-touch-only"})],ve.prototype,"forceTouchOnly",void 0),l([c({type:String,reflect:!0})],ve.prototype,"role",void 0),l([c({type:String,reflect:!0})],ve.prototype,"inaccessibleHref",void 0);var ge=Q`${C}:host{display:flex;gap:var(--rem12);padding:var(--rem8) var(--rem16);position:relative}:host([hoverable]:not([disabled])){cursor:pointer}:host([selected]){background-color:var(--color-neutral-background-container-strong)}:host([disabled]){opacity:.5;pointer-events:none}:host(:not([rpl-touch-only]):not([disabled])[hoverable]:hover){background-color:var(--color-neutral-background-hover)}:host([selected]:not([rpl-touch-only]):not([disabled])[hoverable]:hover){background-color:var(--color-neutral-background-container-strong-hover)}#hover-menu{display:flex;opacity:0;position:absolute;top:0;right:0;transform:translateY(-60%);pointer-events:none;z-index:1}:host([disabled]) #hover-menu,:host([rpl-touch-only]) #hover-menu{display:none}:host(:focus-within:not([rpl-touch-only]):not([disabled])) #hover-menu,:host(:hover:not([rpl-touch-only]):not([disabled])) #hover-menu{opacity:1;pointer-events:auto}rpl-card{display:flex;flex-direction:row;padding:var(--rem2)}.content{min-width:0;display:flex;flex:1}.trailing{display:flex;align-items:center}`;let fe=class extends ve{};fe.styles=ge,fe=l([u("rpl-inbox-row")],fe);let ye=class extends I{constructor(){super(...arguments),this.forceTouchOnly=!1}render(){return ve.isTouchOnly||this.forceTouchOnly?V`<slot></slot>`:q}};l([c({type:Boolean,attribute:"force-touch-only"})],ye.prototype,"forceTouchOnly",void 0),ye=l([u("rpl-inbox-row-touch-only")],ye);
