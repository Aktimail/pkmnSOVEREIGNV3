import{N as t,t as e,_ as s,n as o,g as i,e as r,P as n,T as a,K as c,O as p,bm as u,bn as l,bo as h,bp as m}from"./shell-a9dcd804.js";import{x as d,A as b,s as y}from"./icon-d7ad820f.js";import{B as C,b as k}from"./subreddit-posting-eligibility-c0987c5f.js";import{_ as g}from"./index-e9ae10a6.js";import"./click-card-99f1b8ad.js";import"./create-post-entry-point-wrapper-b7d6664d.js";import"./settings-page-base-client-js-7c313d4a.js";import{u as j}from"./community-colors-fd499160.js";import{g as f,D as v,s as S}from"./utils-3e624d37.js";import"./age-gate-standalone-client-js-55e13342.js";import"./faceplate-hovercard-25d58131.js";import"./user-flair-aefa9eac.js";import"./faceplate-tooltip-c6801851.js";import"./rpl-coachmark-abe2db02.js";import"./tooltip.base-a366add3.js";import"./rpl-popper-cdaac5d5.js";import"./rpl-coachmark-card-c876a6a2.js";import"./header-action-item-chat-client-js-949dafe8.js";let E=class extends(t(y)){constructor(){super(...arguments),this.appearance=C.ALERT,this.outline=!1,this.initialCount=0,this.badgeClassname="",this.setCountEvent="",this.count=0,this.setCount=t=>{this.count=Number(t??0)},this.getCount=()=>this.count}connectedCallback(){super.connectedCallback(),this.count=this.initialCount,this.setCountEvent&&this.subscribe(this.setCountEvent,this.setCount)}disconnectedCallback(){super.disconnectedCallback(),this.setCountEvent&&this.unsubscribe(this.setCountEvent,this.setCount)}render(){return this.count?d`${k({appearance:this.appearance,outline:this.outline,content:g(this.count).toString(),attributes:{className:this.badgeClassname}})}`:b}};E.styles=[e],s([o({type:String})],E.prototype,"appearance",void 0),s([o({type:Boolean})],E.prototype,"outline",void 0),s([o({type:Number,attribute:"initial-count"})],E.prototype,"initialCount",void 0),s([o({type:String,attribute:"badge-classname"})],E.prototype,"badgeClassname",void 0),s([o({type:String,attribute:"set-count-event"})],E.prototype,"setCountEvent",void 0),s([i()],E.prototype,"count",void 0),E=s([r("dynamic-badge")],E);let B=class extends y{constructor(){super(...arguments),this.country="",this.cookieDomain="",this.pubsub=new n(this),this.hasThemeCookieBeenSetByUser=!1}async connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(a.ThemeCookieSetByUser,(()=>{this.hasThemeCookieBeenSetByUser=!0})),this.syncCookieToUserPreference()}async syncCookieToUserPreference(){try{const{data:t}=await c({operation:p.IdentityUserPreferences,variables:{includeNightMode:!0}});if(this.hasThemeCookieBeenSetByUser)return;const e=t.identity?.preferences?.isNightModeEnabled;if(null==e)return;const s=f(),o=s===v.Darkmode;if(null!=s&&e===o)return;j({isDarkMode:e}),S(this.country,this.cookieDomain,e),this.reportMismatch(),this.pubsub.publish(a.ThemeCookieSyncedFromUserPreference)}catch{}}reportMismatch(){const t=u(this.country)&&!l(),e={cookies_enabled:navigator.cookieEnabled&&!t?"true":"false"};this.w3Report(e)}w3Report(t){h({type:m.Counter,name:"shreddit_darkmode_preference_mismatches",value:1,labels:t})}render(){return d`<community-colors></community-colors>`}};s([o({type:String})],B.prototype,"country",void 0),s([o({type:String,attribute:"cookie-domain"})],B.prototype,"cookieDomain",void 0),B=s([r("shreddit-darkmode-syncer")],B);
